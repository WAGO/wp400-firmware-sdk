-:    0:Source:src/network_config/Utils.cpp
-:    1:// SPDX-License-Identifier: GPL-2.0-or-later
-:    2:#include "Utils.hpp"
-:    3:
-:    4:namespace network_config {
-:    5:
function _ZN14network_config8ContainsERKN5boost15program_options13variables_mapERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 0 returned 0% blocks executed 0%
#####:    6:bool Contains(const boost::program_options::variables_map &map, const ::std::string &key) {
#####:    7:  return map.count(key) > 0;
call    0 never executed
-:    8:}
-:    9:
function _ZN14network_config8ContainsERKN5boost15program_options13variables_mapERKNS_6OptionE called 130 returned 100% blocks executed 62%
130:   10:bool Contains(const boost::program_options::variables_map &map, const Option &option) {
130:   11:  return map.count(option.name) > 0;
call    0 returned 130
call    1 returned 130
branch  2 taken 130 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 130
branch  5 taken 130 (fallthrough)
branch  6 taken 0 (throw)
call    7 returned 130
call    8 returned 130
call    9 never executed
call   10 never executed
-:   12:}
-:   13:
function _ZN14network_config10GetValueOfERKN5boost15program_options13variables_mapERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 6 returned 100% blocks executed 59%
6:   14:::std::string GetValueOf(const boost::program_options::variables_map &map, const ::std::string &key) {
6:   15:  auto value = map[key].as<::std::string>();
call    0 returned 6
branch  1 taken 6 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 6
branch  4 taken 6 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 6
branch  7 taken 6 (fallthrough)
branch  8 taken 0 (throw)
12:   16:  UriEscape uri_escape;
call    0 returned 6
call    1 returned 6
branch  2 taken 6 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 6
branch  5 taken 6 (fallthrough)
branch  6 taken 0 (throw)
call    7 returned 6
6:   17:  value = uri_escape.Unescape(value);
call    0 returned 6
branch  1 taken 6 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 6
call    4 returned 6
6:   18:  boost::algorithm::trim_if(value, boost::algorithm::is_any_of("'"));
call    0 returned 6
branch  1 taken 6 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 6
branch  4 taken 6 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 6
call    7 never executed
12:   19:  return value;
6:   20:}
call    0 returned 6
call    1 never executed
call    2 never executed
-:   21:
function _ZN14network_config10GetValueOfB5cxx11ERKN5boost15program_options13variables_mapERKNS_6OptionE called 0 returned 0% blocks executed 0%
#####:   22:::std::string GetValueOf(const boost::program_options::variables_map &map, const Option &option) {
#####:   23:  return GetValueOf(map, option.name);
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
-:   24:}
-:   25:
function _ZN14network_config11GetValuesOfERKN5boost15program_options13variables_mapERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 0 returned 0% blocks executed 0%
#####:   26:boost::optional<::std::vector<::std::string>> GetValuesOf(
-:   27:    const boost::program_options::variables_map &map, const ::std::string &key) {
#####:   28:  if (!Contains(map, key)) {
call    0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
#####:   29:    return boost::optional<::std::vector<::std::string>> { };
call    0 never executed
-:   30:  }
#####:   31:  auto values = map[key].as<::std::vector<::std::string>>();
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
#####:   32:  UriEscape uri_escape;
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
function _ZZN14network_config11GetValuesOfERKN5boost15program_options13variables_mapERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEENKUlRT_E_clISA_EEDaSE_ called 0 returned 0% blocks executed 0%
#####:   33:  std::transform(values.begin(), values.end(), values.begin(), [&](auto &value) {
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
#####:   34:    boost::algorithm::trim_if(value, boost::algorithm::is_any_of("'"));
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
call    5 never executed
#####:   35:    return uri_escape.Unescape(value);
call    0 never executed
-:   36:  });
-:   37:
#####:   38:  return boost::optional<::std::vector<::std::string>> { values };
call    0 never executed
branch  1 never executed
branch  2 never executed
#####:   39:}
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
-:   40:
function _ZN14network_config13GetValueOfGetB5cxx11ERKN5boost15program_options13variables_mapE called 0 returned 0% blocks executed 0%
#####:   41:::std::string GetValueOfGet(const boost::program_options::variables_map &map) {
#####:   42:  return GetValueOf(map, "get");
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
-:   43:}
-:   44:
function _ZN14network_config13GetValueOfSetB5cxx11ERKN5boost15program_options13variables_mapE called 5 returned 100% blocks executed 62%
5:   45:::std::string GetValueOfSet(const boost::program_options::variables_map &map) {
5:   46:  return GetValueOf(map, "set");
call    0 returned 5
call    1 returned 5
branch  2 taken 5 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 5
branch  5 taken 5 (fallthrough)
branch  6 taken 0 (throw)
call    7 returned 5
call    8 returned 5
call    9 never executed
call   10 never executed
-:   47:}
-:   48:
function _ZN14network_config13GetValueOfAddB5cxx11ERKN5boost15program_options13variables_mapE called 0 returned 0% blocks executed 0%
#####:   49:::std::string GetValueOfAdd(const boost::program_options::variables_map &map) {
#####:   50:  return GetValueOf(map, "add");
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
-:   51:}
-:   52:
function _ZN14network_config13GetValueOfDelB5cxx11ERKN5boost15program_options13variables_mapE called 0 returned 0% blocks executed 0%
#####:   53:::std::string GetValueOfDel(const boost::program_options::variables_map &map) {
#####:   54:  return GetValueOf(map, "del");
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
-:   55:}
-:   56:
function _ZN14network_config9GetFormatB5cxx11ERKN5boost15program_options13variables_mapE called 1 returned 100% blocks executed 57%
1:   57:::std::string GetFormat(const boost::program_options::variables_map &map) {
2:   58:  auto value = map["format"].as<FormatOption>().value;
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
call   13 returned 1
call   14 never executed
1:   59:  boost::algorithm::trim_if(value, boost::algorithm::is_any_of("'"));
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 never executed
1:   60:  return value;
=====:   61:}
call    0 never executed
-:   62:
function _ZN14network_config9GetDeviceB5cxx11ERKN5boost15program_options13variables_mapE called 1 returned 100% blocks executed 58%
1:   63:::std::string GetDevice(const boost::program_options::variables_map &map) {
2:   64:  return netconf::Interface::NameFromLabel(GetValueOf(map, "device"));
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
call   10 returned 1
call   11 returned 1
call   12 returned 1
call   13 never executed
call   14 never executed
call   15 never executed
-:   65:}
-:   66:
function _ZN14network_config3GetB5cxx11ERKN5boost15program_options13variables_mapERKNS_6OptionE called 0 returned 0% blocks executed 0%
#####:   67:::std::string Get(const boost::program_options::variables_map &map, const Option &option) {
#####:   68:  return GetValueOf(map, option.name);
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
-:   69:}
-:   70:
-:   71:
-:   72:
-:   73:}
