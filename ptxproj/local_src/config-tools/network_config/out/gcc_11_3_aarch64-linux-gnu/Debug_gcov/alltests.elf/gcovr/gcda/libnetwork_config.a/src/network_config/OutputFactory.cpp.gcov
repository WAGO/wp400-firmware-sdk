-:    0:Source:src/network_config/OutputFactory.cpp
-:    1:// SPDX-License-Identifier: GPL-2.0-or-later
-:    2:
-:    3:#include "OutputFactory.hpp"
-:    4:#include "OptionStrings.hpp"
-:    5:#include "Utils.hpp"
-:    6:
-:    7:namespace network_config {
-:    8:  using namespace std::string_literals;
-:    9:
function _ZN14network_config13OutputFactory6CreateERKN5boost15program_options13variables_mapE called 5 returned 100% blocks executed 87%
5:   10:::std::unique_ptr<Output> OutputFactory::Create(const po::variables_map &vm) {
5:   11:  const auto &optstr = GetOptions();
call    0 returned 5
-:   12:
5:   13:  ::std::unique_ptr<Output> output;
5:   14:  if (Contains(vm, optstr.quiet)) {
call    0 returned 5
branch  1 taken 5 (fallthrough)
branch  2 taken 0 (throw)
branch  3 taken 2 (fallthrough)
branch  4 taken 3
2:   15:    output = ::std::make_unique<NullOutput>();
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 2
call    4 returned 2
-:   16:    // FIXME: remove handling of error_msg_dst when the wbm no longer uses it
3:   17:  } else if (Contains(vm, optstr.error_msg_dst)
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
3:   18:            || Contains(vm, optstr.write_last_error)) {
branch  0 taken 2 (fallthrough)
branch  1 taken 1
call    2 returned 2
branch  3 taken 2 (fallthrough)
branch  4 taken 0 (throw)
branch  5 taken 1 (fallthrough)
branch  6 taken 1
branch  7 taken 2 (fallthrough)
branch  8 taken 1
2:   19:    output = ::std::make_unique<FileOutput>("/tmp/last_error.txt"s);
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 2
branch  4 taken 2 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 2
call    7 returned 2
call    8 returned 2
call    9 never executed
-:   20:  } else {
1:   21:    output = ::std::make_unique<StderrOutput>();
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
call    4 returned 1
-:   22:  }
-:   23:
5:   24:  return output;
=====:   25:}
call    0 never executed
-:   26:
-:   27:}  // namespace network_config
