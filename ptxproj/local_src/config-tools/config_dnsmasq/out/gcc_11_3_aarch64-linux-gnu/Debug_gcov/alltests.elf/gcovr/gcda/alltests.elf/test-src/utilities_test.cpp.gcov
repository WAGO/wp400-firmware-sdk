-:    0:Source:test-src/utilities_test.cpp
-:    1://------------------------------------------------------------------------------
-:    2:// Copyright (c) 2020-2024 WAGO GmbH & Co. KG
-:    3://
-:    4:// PROPRIETARY RIGHTS are involved in the subject matter of this material. All
-:    5:// manufacturing, reproduction, use and sales rights pertaining to this
-:    6:// subject matter are governed by the license agreement. The recipient of this
-:    7:// software implicitly accepts the terms of the license.
-:    8://------------------------------------------------------------------------------
-:    9:
-:   10:
-:   11:#include <gtest/gtest.h>
-:   12:
-:   13:#include "utilities.hpp"
-:   14:
4:   15:TEST(test_utilities, check_mac_validity) {
1:   16:  ::std::string mac = "00:30:de:ad:be:ef";
1:   17:  bool is_valid = configdnsmasq::conv_is_valid_mac(mac);
1*:   18:  ASSERT_TRUE(is_valid);
-:   19:
1:   20:  ::std::string mac_uppercase = "00:30:DE:AD:BE:EF";
1:   21:  is_valid = configdnsmasq::conv_is_valid_mac(mac_uppercase);
1*:   22:  ASSERT_TRUE(is_valid);
-:   23:
1:   24:  ::std::string mac_to_short = "00:30:de:ad:be:e";
1:   25:  is_valid = configdnsmasq::conv_is_valid_mac(mac_to_short);
1*:   26:  ASSERT_FALSE(is_valid);
-:   27:
1:   28:  ::std::string mac_to_long = "00:30:de:ad:be:eff";
1:   29:  is_valid = configdnsmasq::conv_is_valid_mac(mac_to_long);
1*:   30:  ASSERT_FALSE(is_valid);
-:   31:
1:   32:  ::std::string mac_none_hex = "00:30:de:ad:be:ex";
1:   33:  is_valid = configdnsmasq::conv_is_valid_mac(mac_none_hex);
1*:   34:  ASSERT_FALSE(is_valid);
-:   35:
1:   36:  ::std::string mac_invalid_delimiter = "00:30:de-ad:be:ef";
1:   37:  is_valid = configdnsmasq::conv_is_valid_mac(mac_invalid_delimiter);
1*:   38:  ASSERT_FALSE(is_valid);
-:   39:
1:   40:  ::std::string mac_broadcast = "FF:FF:FF:FF:FF:FF";
1:   41:  is_valid = configdnsmasq::conv_is_valid_mac(mac_broadcast);
1*:   42:  ASSERT_FALSE(is_valid);
-:   43:
1:   44:  ::std::string mac_multicast = "01:30:de:ad:be:ef";
1:   45:  is_valid = configdnsmasq::conv_is_valid_mac(mac_multicast);
1*:   46:  ASSERT_FALSE(is_valid);
1:   47:}
------------------
_ZN38test_utilities_check_mac_validity_TestC2Ev:
function _ZN38test_utilities_check_mac_validity_TestC2Ev called 1 returned 100% blocks executed 100%
1:   15:TEST(test_utilities, check_mac_validity) {
call    0 returned 1
------------------
_ZN38test_utilities_check_mac_validity_TestD0Ev:
function _ZN38test_utilities_check_mac_validity_TestD0Ev called 1 returned 100% blocks executed 100%
1:   15:TEST(test_utilities, check_mac_validity) {
call    0 returned 1
call    1 returned 1
------------------
_ZN38test_utilities_check_mac_validity_TestD2Ev:
function _ZN38test_utilities_check_mac_validity_TestD2Ev called 1 returned 100% blocks executed 100%
1:   15:TEST(test_utilities, check_mac_validity) {
call    0 returned 1
------------------
_ZN38test_utilities_check_mac_validity_Test8TestBodyEv:
function _ZN38test_utilities_check_mac_validity_Test8TestBodyEv called 1 returned 100% blocks executed 34%
1:   15:TEST(test_utilities, check_mac_validity) {
1:   16:  ::std::string mac = "00:30:de:ad:be:ef";
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
1:   17:  bool is_valid = configdnsmasq::conv_is_valid_mac(mac);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
1*:   18:  ASSERT_TRUE(is_valid);
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
call   11 never executed
branch 12 never executed
branch 13 never executed
call   14 never executed
branch 15 never executed
branch 16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 returned 1
branch 21 taken 1 (fallthrough)
branch 22 taken 0
call   23 never executed
call   24 never executed
call   25 never executed
call   26 never executed
-:   19:
1:   20:  ::std::string mac_uppercase = "00:30:DE:AD:BE:EF";
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 never executed
1:   21:  is_valid = configdnsmasq::conv_is_valid_mac(mac_uppercase);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
1*:   22:  ASSERT_TRUE(is_valid);
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
call   11 never executed
branch 12 never executed
branch 13 never executed
call   14 never executed
branch 15 never executed
branch 16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 returned 1
branch 21 taken 1 (fallthrough)
branch 22 taken 0
call   23 never executed
call   24 never executed
call   25 never executed
call   26 never executed
-:   23:
1:   24:  ::std::string mac_to_short = "00:30:de:ad:be:e";
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 never executed
1:   25:  is_valid = configdnsmasq::conv_is_valid_mac(mac_to_short);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
1*:   26:  ASSERT_FALSE(is_valid);
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
call   11 never executed
branch 12 never executed
branch 13 never executed
call   14 never executed
branch 15 never executed
branch 16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 returned 1
branch 21 taken 1 (fallthrough)
branch 22 taken 0
call   23 never executed
call   24 never executed
call   25 never executed
call   26 never executed
-:   27:
1:   28:  ::std::string mac_to_long = "00:30:de:ad:be:eff";
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 never executed
1:   29:  is_valid = configdnsmasq::conv_is_valid_mac(mac_to_long);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
1*:   30:  ASSERT_FALSE(is_valid);
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
call   11 never executed
branch 12 never executed
branch 13 never executed
call   14 never executed
branch 15 never executed
branch 16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 returned 1
branch 21 taken 1 (fallthrough)
branch 22 taken 0
call   23 never executed
call   24 never executed
call   25 never executed
call   26 never executed
-:   31:
1:   32:  ::std::string mac_none_hex = "00:30:de:ad:be:ex";
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 never executed
1:   33:  is_valid = configdnsmasq::conv_is_valid_mac(mac_none_hex);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
1*:   34:  ASSERT_FALSE(is_valid);
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
call   11 never executed
branch 12 never executed
branch 13 never executed
call   14 never executed
branch 15 never executed
branch 16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 returned 1
branch 21 taken 1 (fallthrough)
branch 22 taken 0
call   23 never executed
call   24 never executed
call   25 never executed
call   26 never executed
-:   35:
1:   36:  ::std::string mac_invalid_delimiter = "00:30:de-ad:be:ef";
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 never executed
1:   37:  is_valid = configdnsmasq::conv_is_valid_mac(mac_invalid_delimiter);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
1*:   38:  ASSERT_FALSE(is_valid);
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
call   11 never executed
branch 12 never executed
branch 13 never executed
call   14 never executed
branch 15 never executed
branch 16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 returned 1
branch 21 taken 1 (fallthrough)
branch 22 taken 0
call   23 never executed
call   24 never executed
call   25 never executed
call   26 never executed
-:   39:
1:   40:  ::std::string mac_broadcast = "FF:FF:FF:FF:FF:FF";
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 never executed
1:   41:  is_valid = configdnsmasq::conv_is_valid_mac(mac_broadcast);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
1*:   42:  ASSERT_FALSE(is_valid);
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
call   11 never executed
branch 12 never executed
branch 13 never executed
call   14 never executed
branch 15 never executed
branch 16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 returned 1
branch 21 taken 1 (fallthrough)
branch 22 taken 0
call   23 never executed
call   24 never executed
call   25 never executed
call   26 never executed
-:   43:
1:   44:  ::std::string mac_multicast = "01:30:de:ad:be:ef";
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 never executed
1:   45:  is_valid = configdnsmasq::conv_is_valid_mac(mac_multicast);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
1*:   46:  ASSERT_FALSE(is_valid);
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
call   11 never executed
branch 12 never executed
branch 13 never executed
call   14 never executed
branch 15 never executed
branch 16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 returned 1
branch 21 taken 1 (fallthrough)
branch 22 taken 0
call   23 never executed
call   24 never executed
call   25 never executed
call   26 never executed
1:   47:}
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
call    3 never executed
------------------
