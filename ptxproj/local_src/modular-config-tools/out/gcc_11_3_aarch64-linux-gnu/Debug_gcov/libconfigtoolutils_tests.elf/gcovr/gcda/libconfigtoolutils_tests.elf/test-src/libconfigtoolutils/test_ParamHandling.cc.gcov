-:    0:Source:test-src/libconfigtoolutils/test_ParamHandling.cc
-:    1://------------------------------------------------------------------------------
-:    2:// This Source Code Form is subject to the terms of the Mozilla Public
-:    3:// License, v. 2.0. If a copy of the MPL was not distributed with this
-:    4:// file, You can obtain one at http://mozilla.org/MPL/2.0/.
-:    5://
-:    6:// This file is part of project modular-config-tools (PTXdist package modular-config-tools).
-:    7://
-:    8:// Copyright (c) 2017-2022 WAGO GmbH & Co. KG
-:    9://------------------------------------------------------------------------------
-:   10://------------------------------------------------------------------------------
-:   11:///  \file     test_ParamHandling.cc
-:   12:///
-:   13:///  \brief    Test for helper functions for config tool parameter handling.
-:   14:///
-:   15:///  \author   PEn: WAGO GmbH & Co. KG
-:   16://------------------------------------------------------------------------------
-:   17:
-:   18://------------------------------------------------------------------------------
-:   19:// include files
-:   20://------------------------------------------------------------------------------
-:   21:#include "ctutil/param_handling.h"
-:   22:#include "ctutil/error_codes.h"
-:   23:#include <gtest/gtest.h>
-:   24:#include <string.h>
-:   25:
-:   26://------------------------------------------------------------------------------
-:   27:// macros
-:   28://------------------------------------------------------------------------------
-:   29:
-:   30://------------------------------------------------------------------------------
-:   31:// defines; structure, enumeration and type definitions
-:   32://------------------------------------------------------------------------------
-:   33:namespace
-:   34:{
-:   35:  struct UriTestArgs
-:   36:  {
-:   37:    char const * const szUriEncodedString;
-:   38:    char const * const szUriDecodedString;
-:   39:  };
-:   40:
-:   41:  class ParamHandlingUriChar: public ::testing::TestWithParam<UriTestArgs>
-:   42:  {
-:   43:
-:   44:  };
-:   45:
-:   46:  class ParamHandlingUriExample: public ::testing::TestWithParam<UriTestArgs>
-:   47:  {
-:   48:
-:   49:  };
-:   50:}
-:   51:
-:   52://------------------------------------------------------------------------------
-:   53:// variables' and constants' definitions
-:   54://------------------------------------------------------------------------------
-:   55:
-:   56://------------------------------------------------------------------------------
-:   57:// test implementation
-:   58://------------------------------------------------------------------------------
95:   59:TEST_P(ParamHandlingUriChar, DecodeUriChar)
-:   60:{
47:   61:  UriTestArgs const & testArgs = GetParam();
-:   62:  {
47:   63:    statusCode_t result = CTUTIL_SUCCESS;
-:   64:    char szTestArg[4];
47:   65:    strncpy(szTestArg, testArgs.szUriEncodedString, sizeof(szTestArg));
47:   66:    szTestArg[3] = '\0';
47:   67:    result = ctutil_DecodeUriArgument(szTestArg);
47*:   68:    EXPECT_TRUE(ctutil_IsStatusOk(result));
47*:   69:    EXPECT_STREQ(testArgs.szUriDecodedString, szTestArg);
-:   70:  }
47:   71:}
------------------
_ZN39ParamHandlingUriChar_DecodeUriChar_Test8TestBodyEv:
function _ZN39ParamHandlingUriChar_DecodeUriChar_Test8TestBodyEv called 47 returned 100% blocks executed 26%
47:   59:TEST_P(ParamHandlingUriChar, DecodeUriChar)
-:   60:{
47:   61:  UriTestArgs const & testArgs = GetParam();
call    0 returned 47
-:   62:  {
47:   63:    statusCode_t result = CTUTIL_SUCCESS;
-:   64:    char szTestArg[4];
47:   65:    strncpy(szTestArg, testArgs.szUriEncodedString, sizeof(szTestArg));
47:   66:    szTestArg[3] = '\0';
47:   67:    result = ctutil_DecodeUriArgument(szTestArg);
call    0 returned 47
branch  1 taken 47 (fallthrough)
branch  2 taken 0 (throw)
47*:   68:    EXPECT_TRUE(ctutil_IsStatusOk(result));
call    0 returned 47
branch  1 taken 47 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 47
call    4 returned 47
branch  5 taken 0 (fallthrough)
branch  6 taken 47
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
call   11 never executed
branch 12 never executed
branch 13 never executed
call   14 never executed
branch 15 never executed
branch 16 never executed
call   17 never executed
branch 18 never executed
branch 19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
call   23 returned 47
call   24 never executed
call   25 never executed
call   26 never executed
call   27 never executed
47*:   69:    EXPECT_STREQ(testArgs.szUriDecodedString, szTestArg);
call    0 returned 47
branch  1 taken 47 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 47
branch  4 taken 0 (fallthrough)
branch  5 taken 47
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
call   18 returned 47
call   19 never executed
call   20 never executed
call   21 never executed
-:   70:  }
47:   71:}
------------------
_ZN39ParamHandlingUriChar_DecodeUriChar_Test13AddToRegistryEv:
function _ZN39ParamHandlingUriChar_DecodeUriChar_Test13AddToRegistryEv called 1 returned 100% blocks executed 55%
1:   59:TEST_P(ParamHandlingUriChar, DecodeUriChar)
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
call   15 returned 1
call   16 returned 1
call   17 returned 1
branch 18 taken 1 (fallthrough)
branch 19 taken 0 (throw)
call   20 returned 1
branch 21 taken 1 (fallthrough)
branch 22 taken 0 (throw)
call   23 returned 1
branch 24 taken 1 (fallthrough)
branch 25 taken 0 (throw)
call   26 returned 1
call   27 returned 1
call   28 returned 1
call   29 returned 1
call   30 returned 1
call   31 returned 1
call   32 never executed
call   33 never executed
call   34 never executed
call   35 never executed
call   36 never executed
call   37 never executed
------------------
_ZN39ParamHandlingUriChar_DecodeUriChar_TestC2Ev:
function _ZN39ParamHandlingUriChar_DecodeUriChar_TestC2Ev called 47 returned 100% blocks executed 100%
47:   59:TEST_P(ParamHandlingUriChar, DecodeUriChar)
call    0 returned 47
------------------
-:   72:
-:   73:
7:   74:TEST_P(ParamHandlingUriExample, DecodeUriExample)
-:   75:{
3:   76:  UriTestArgs const & testArgs = GetParam();
-:   77:  {
3:   78:    statusCode_t result = CTUTIL_SUCCESS;
3:   79:    size_t const inputLength = strlen(testArgs.szUriEncodedString);
3:   80:    char * szTestArg = new char[inputLength + 1];
3:   81:    strncpy(szTestArg, testArgs.szUriEncodedString, inputLength);
3:   82:    szTestArg[inputLength] = '\0';
3:   83:    result = ctutil_DecodeUriArgument(szTestArg);
3*:   84:    EXPECT_TRUE(ctutil_IsStatusOk(result));
3*:   85:    EXPECT_STREQ(testArgs.szUriDecodedString, szTestArg);
3:   86:    delete[] szTestArg;
-:   87:  }
3:   88:}
------------------
_ZN45ParamHandlingUriExample_DecodeUriExample_Test8TestBodyEv:
function _ZN45ParamHandlingUriExample_DecodeUriExample_Test8TestBodyEv called 3 returned 100% blocks executed 31%
3:   74:TEST_P(ParamHandlingUriExample, DecodeUriExample)
-:   75:{
3:   76:  UriTestArgs const & testArgs = GetParam();
call    0 returned 3
-:   77:  {
3:   78:    statusCode_t result = CTUTIL_SUCCESS;
3:   79:    size_t const inputLength = strlen(testArgs.szUriEncodedString);
3:   80:    char * szTestArg = new char[inputLength + 1];
call    0 returned 3
3:   81:    strncpy(szTestArg, testArgs.szUriEncodedString, inputLength);
3:   82:    szTestArg[inputLength] = '\0';
3:   83:    result = ctutil_DecodeUriArgument(szTestArg);
call    0 returned 3
3*:   84:    EXPECT_TRUE(ctutil_IsStatusOk(result));
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 3
call    4 returned 3
branch  5 taken 0 (fallthrough)
branch  6 taken 3
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
call   11 never executed
branch 12 never executed
branch 13 never executed
call   14 never executed
branch 15 never executed
branch 16 never executed
call   17 never executed
branch 18 never executed
branch 19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
call   23 returned 3
call   24 never executed
call   25 never executed
call   26 never executed
call   27 never executed
3*:   85:    EXPECT_STREQ(testArgs.szUriDecodedString, szTestArg);
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 3
branch  4 taken 0 (fallthrough)
branch  5 taken 3
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
call   18 returned 3
call   19 never executed
call   20 never executed
call   21 never executed
3:   86:    delete[] szTestArg;
branch  0 taken 3 (fallthrough)
branch  1 taken 0
call    2 returned 3
-:   87:  }
3:   88:}
------------------
_ZN45ParamHandlingUriExample_DecodeUriExample_Test13AddToRegistryEv:
function _ZN45ParamHandlingUriExample_DecodeUriExample_Test13AddToRegistryEv called 1 returned 100% blocks executed 55%
1:   74:TEST_P(ParamHandlingUriExample, DecodeUriExample)
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
call   15 returned 1
call   16 returned 1
call   17 returned 1
branch 18 taken 1 (fallthrough)
branch 19 taken 0 (throw)
call   20 returned 1
branch 21 taken 1 (fallthrough)
branch 22 taken 0 (throw)
call   23 returned 1
branch 24 taken 1 (fallthrough)
branch 25 taken 0 (throw)
call   26 returned 1
call   27 returned 1
call   28 returned 1
call   29 returned 1
call   30 returned 1
call   31 returned 1
call   32 never executed
call   33 never executed
call   34 never executed
call   35 never executed
call   36 never executed
call   37 never executed
------------------
_ZN45ParamHandlingUriExample_DecodeUriExample_TestC2Ev:
function _ZN45ParamHandlingUriExample_DecodeUriExample_TestC2Ev called 3 returned 100% blocks executed 100%
3:   74:TEST_P(ParamHandlingUriExample, DecodeUriExample)
call    0 returned 3
------------------
-:   89:
-:   90:
-:   91:UriTestArgs const arTestUriChars[] =
-:   92:{
-:   93:  { "%20", " " },
-:   94:  { "%21", "!" },
-:   95:  { "%22", "\"" },
-:   96:  { "%23", "#" },
-:   97:  { "%24", "$" },
-:   98:  { "%25", "%" },
-:   99:  { "%26", "&" },
-:  100:  { "%27", "'" },
-:  101:  { "%28", "(" },
-:  102:  { "%29", ")" },
-:  103:  { "%2A", "*" },
-:  104:  { "%2B", "+" },
-:  105:  { "%2C", "," },
-:  106:  { "%2D", "-" },
-:  107:  { "%2E", "." },
-:  108:  { "%2F", "/" },
-:  109:  { "%2a", "*" },
-:  110:  { "%2b", "+" },
-:  111:  { "%2c", "," },
-:  112:  { "%2d", "-" },
-:  113:  { "%2e", "." },
-:  114:  { "%2f", "/" },
-:  115:  { "%3A", ":" },
-:  116:  { "%3B", ";" },
-:  117:  { "%3C", "<" },
-:  118:  { "%3D", "=" },
-:  119:  { "%3E", ">" },
-:  120:  { "%3F", "?" },
-:  121:  { "%3a", ":" },
-:  122:  { "%3b", ";" },
-:  123:  { "%3c", "<" },
-:  124:  { "%3d", "=" },
-:  125:  { "%3e", ">" },
-:  126:  { "%3f", "?" },
-:  127:  { "%40", "@" },
-:  128:  { "%5B", "[" },
-:  129:  { "%5C", "\\" },
-:  130:  { "%5D", "]" },
-:  131:  { "%5b", "[" },
-:  132:  { "%5c", "\\" },
-:  133:  { "%5d", "]" },
-:  134:  { "%7B", "{" },
-:  135:  { "%7C", "|" },
-:  136:  { "%7D", "}" },
-:  137:  { "%7b", "{" },
-:  138:  { "%7c", "|" },
-:  139:  { "%7d", "}" },
-:  140:};
48*:  141:INSTANTIATE_TEST_CASE_P(ParamHandling, ParamHandlingUriChar, ::testing::ValuesIn(arTestUriChars));
------------------
_ZL57gtest_ParamHandlingParamHandlingUriChar_EvalGenerateName_RKN7testing13TestParamInfoIN12_GLOBAL__N_111UriTestArgsEEE:
function _ZL57gtest_ParamHandlingParamHandlingUriChar_EvalGenerateName_RKN7testing13TestParamInfoIN12_GLOBAL__N_111UriTestArgsEEE called 47 returned 100% blocks executed 36%
47*:  141:INSTANTIATE_TEST_CASE_P(ParamHandling, ParamHandlingUriChar, ::testing::ValuesIn(arTestUriChars));
call    0 returned 47
branch  1 taken 0 (fallthrough)
branch  2 taken 47
call    3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
call   11 returned 47
------------------
_ZL54gtest_ParamHandlingParamHandlingUriChar_EvalGenerator_v:
function _ZL54gtest_ParamHandlingParamHandlingUriChar_EvalGenerator_v called 1 returned 100% blocks executed 100%
1:  141:INSTANTIATE_TEST_CASE_P(ParamHandling, ParamHandlingUriChar, ::testing::ValuesIn(arTestUriChars));
call    0 returned 1
------------------
-:  142:
-:  143:
-:  144:UriTestArgs const arTestUriExamples[] =
-:  145:{
-:  146:  {
-:  147:    "%2B%23%23%23%2A This is a typical example of a %27%25%27%2Dencoded %28URI%29 string%2E%20"
-:  148:    "%22Respect%22 %26 decode it%21 Is this %3E%24VAR%3C a variable%2C do you know%3F %2A%23%23%23%2B",
-:  149:    "+###* This is a typical example of a '%'-encoded (URI) string. "
-:  150:    "\"Respect\" & decode it! Is this >$VAR< a variable, do you know? *###+"
-:  151:  },
-:  152:  {
-:  153:    "%2b%23%23%23%2a This is a typical example of a %27%25%27%2Dencoded %28URI%29 string%2e%20"
-:  154:    "%22Respect%22 %26 decode it%21 Is this %3e%24VAR%3c a variable%2c do you know%3f %2a%23%23%23%2b",
-:  155:    "+###* This is a typical example of a '%'-encoded (URI) string. "
-:  156:    "\"Respect\" & decode it! Is this >$VAR< a variable, do you know? *###+"
-:  157:  },
-:  158:  {
-:  159:    "sudo /etc/config-tools/config_linux_user user=admin new-password=123%22%25abc%2b%27() confirm-password=123%22%25abc%2b%27()",
-:  160:    "sudo /etc/config-tools/config_linux_user user=admin new-password=123\"%abc+'() confirm-password=123\"%abc+'()"
-:  161:  },
-:  162:};
4*:  163:INSTANTIATE_TEST_CASE_P(ParamHandling, ParamHandlingUriExample, ::testing::ValuesIn(arTestUriExamples));
------------------
_ZL60gtest_ParamHandlingParamHandlingUriExample_EvalGenerateName_RKN7testing13TestParamInfoIN12_GLOBAL__N_111UriTestArgsEEE:
function _ZL60gtest_ParamHandlingParamHandlingUriExample_EvalGenerateName_RKN7testing13TestParamInfoIN12_GLOBAL__N_111UriTestArgsEEE called 3 returned 100% blocks executed 36%
3*:  163:INSTANTIATE_TEST_CASE_P(ParamHandling, ParamHandlingUriExample, ::testing::ValuesIn(arTestUriExamples));
call    0 returned 3
branch  1 taken 0 (fallthrough)
branch  2 taken 3
call    3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
call   11 returned 3
------------------
_ZL57gtest_ParamHandlingParamHandlingUriExample_EvalGenerator_v:
function _ZL57gtest_ParamHandlingParamHandlingUriExample_EvalGenerator_v called 1 returned 100% blocks executed 100%
1:  163:INSTANTIATE_TEST_CASE_P(ParamHandling, ParamHandlingUriExample, ::testing::ValuesIn(arTestUriExamples));
call    0 returned 1
------------------
-:  164:
-:  165:
4:  166:TEST(EarlyOptionEvaluation, EvaluateShortOption_q)
-:  167:{
1:  168:  char szArg00[] = "somethingOther";
1:  169:  char szArg01[] = "-q";
-:  170:  char * const arszArgs[]
-:  171:  {
-:  172:    szArg00,
-:  173:    szArg01,
1:  174:  };
1:  175:  int const argCount = sizeof(arszArgs) / sizeof(char *);
-:  176:
-:  177:  ctutil_Options_t stOptions;
1:  178:  memset(&stOptions, 0, sizeof(stOptions));
1:  179:  statusCode_t const result = ctutil_EvaluateEarlyOptions(argCount, arszArgs, &stOptions);
-:  180:
1*:  181:  ASSERT_EQ(CTUTIL_SUCCESS, result);
1*:  182:  EXPECT_STREQ("somethingOther", szArg00);
1*:  183:  EXPECT_TRUE(stOptions.stCommonOptions.quiet);
-:  184:}
------------------
_ZN48EarlyOptionEvaluation_EvaluateShortOption_q_TestC2Ev:
function _ZN48EarlyOptionEvaluation_EvaluateShortOption_q_TestC2Ev called 1 returned 100% blocks executed 100%
1:  166:TEST(EarlyOptionEvaluation, EvaluateShortOption_q)
call    0 returned 1
------------------
_ZN48EarlyOptionEvaluation_EvaluateShortOption_q_TestD0Ev:
function _ZN48EarlyOptionEvaluation_EvaluateShortOption_q_TestD0Ev called 1 returned 100% blocks executed 100%
1:  166:TEST(EarlyOptionEvaluation, EvaluateShortOption_q)
call    0 returned 1
call    1 returned 1
------------------
_ZN48EarlyOptionEvaluation_EvaluateShortOption_q_TestD2Ev:
function _ZN48EarlyOptionEvaluation_EvaluateShortOption_q_TestD2Ev called 1 returned 100% blocks executed 100%
1:  166:TEST(EarlyOptionEvaluation, EvaluateShortOption_q)
call    0 returned 1
------------------
_ZN48EarlyOptionEvaluation_EvaluateShortOption_q_Test8TestBodyEv:
function _ZN48EarlyOptionEvaluation_EvaluateShortOption_q_Test8TestBodyEv called 1 returned 100% blocks executed 25%
1:  166:TEST(EarlyOptionEvaluation, EvaluateShortOption_q)
-:  167:{
1:  168:  char szArg00[] = "somethingOther";
1:  169:  char szArg01[] = "-q";
-:  170:  char * const arszArgs[]
-:  171:  {
-:  172:    szArg00,
-:  173:    szArg01,
1:  174:  };
1:  175:  int const argCount = sizeof(arszArgs) / sizeof(char *);
-:  176:
-:  177:  ctutil_Options_t stOptions;
1:  178:  memset(&stOptions, 0, sizeof(stOptions));
1:  179:  statusCode_t const result = ctutil_EvaluateEarlyOptions(argCount, arszArgs, &stOptions);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
-:  180:
1*:  181:  ASSERT_EQ(CTUTIL_SUCCESS, result);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
call   18 returned 1
branch 19 taken 1 (fallthrough)
branch 20 taken 0
call   21 never executed
call   22 never executed
call   23 never executed
1*:  182:  EXPECT_STREQ("somethingOther", szArg00);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
call   18 returned 1
call   19 never executed
call   20 never executed
call   21 never executed
1*:  183:  EXPECT_TRUE(stOptions.stCommonOptions.quiet);
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
call    8 never executed
branch  9 never executed
branch 10 never executed
call   11 never executed
branch 12 never executed
branch 13 never executed
call   14 never executed
branch 15 never executed
branch 16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 returned 1
call   21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
-:  184:}
------------------
-:  185:
-:  186:
4:  187:TEST(EarlyOptionEvaluation, EvaluateShortOption_qMix)
-:  188:{
1:  189:  char szArg00[] = "somethingOther";
1:  190:  char szArg01[] = "-kfqcls";
-:  191:  char * const arszArgs[]
-:  192:  {
-:  193:    szArg00,
-:  194:    szArg01,
1:  195:  };
1:  196:  int const argCount = sizeof(arszArgs) / sizeof(char *);
-:  197:
-:  198:  ctutil_Options_t stOptions;
1:  199:  memset(&stOptions, 0, sizeof(stOptions));
1:  200:  statusCode_t const result = ctutil_EvaluateEarlyOptions(argCount, arszArgs, &stOptions);
-:  201:
1*:  202:  ASSERT_EQ(CTUTIL_SUCCESS, result);
1*:  203:  EXPECT_STREQ("somethingOther", szArg00);
1*:  204:  EXPECT_TRUE(stOptions.stCommonOptions.quiet);
-:  205:}
------------------
_ZN51EarlyOptionEvaluation_EvaluateShortOption_qMix_TestC2Ev:
function _ZN51EarlyOptionEvaluation_EvaluateShortOption_qMix_TestC2Ev called 1 returned 100% blocks executed 100%
1:  187:TEST(EarlyOptionEvaluation, EvaluateShortOption_qMix)
call    0 returned 1
------------------
_ZN51EarlyOptionEvaluation_EvaluateShortOption_qMix_TestD0Ev:
function _ZN51EarlyOptionEvaluation_EvaluateShortOption_qMix_TestD0Ev called 1 returned 100% blocks executed 100%
1:  187:TEST(EarlyOptionEvaluation, EvaluateShortOption_qMix)
call    0 returned 1
call    1 returned 1
------------------
_ZN51EarlyOptionEvaluation_EvaluateShortOption_qMix_TestD2Ev:
function _ZN51EarlyOptionEvaluation_EvaluateShortOption_qMix_TestD2Ev called 1 returned 100% blocks executed 100%
1:  187:TEST(EarlyOptionEvaluation, EvaluateShortOption_qMix)
call    0 returned 1
------------------
_ZN51EarlyOptionEvaluation_EvaluateShortOption_qMix_Test8TestBodyEv:
function _ZN51EarlyOptionEvaluation_EvaluateShortOption_qMix_Test8TestBodyEv called 1 returned 100% blocks executed 25%
1:  187:TEST(EarlyOptionEvaluation, EvaluateShortOption_qMix)
-:  188:{
1:  189:  char szArg00[] = "somethingOther";
1:  190:  char szArg01[] = "-kfqcls";
-:  191:  char * const arszArgs[]
-:  192:  {
-:  193:    szArg00,
-:  194:    szArg01,
1:  195:  };
1:  196:  int const argCount = sizeof(arszArgs) / sizeof(char *);
-:  197:
-:  198:  ctutil_Options_t stOptions;
1:  199:  memset(&stOptions, 0, sizeof(stOptions));
1:  200:  statusCode_t const result = ctutil_EvaluateEarlyOptions(argCount, arszArgs, &stOptions);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
-:  201:
1*:  202:  ASSERT_EQ(CTUTIL_SUCCESS, result);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
call   18 returned 1
branch 19 taken 1 (fallthrough)
branch 20 taken 0
call   21 never executed
call   22 never executed
call   23 never executed
1*:  203:  EXPECT_STREQ("somethingOther", szArg00);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
call   18 returned 1
call   19 never executed
call   20 never executed
call   21 never executed
1*:  204:  EXPECT_TRUE(stOptions.stCommonOptions.quiet);
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
call    8 never executed
branch  9 never executed
branch 10 never executed
call   11 never executed
branch 12 never executed
branch 13 never executed
call   14 never executed
branch 15 never executed
branch 16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 returned 1
call   21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
-:  205:}
------------------
-:  206:
-:  207:
4:  208:TEST(EarlyOptionEvaluation, EvaluateShortOption_x)
-:  209:{
1:  210:  char szArg00[] = "somethingOther";
1:  211:  char szArg01[] = "-x";
1:  212:  char szArg02[] = "%28t%29";
-:  213:  char * const arszArgs[]
-:  214:  {
-:  215:    szArg00,
-:  216:    szArg01,
-:  217:    szArg02,
1:  218:  };
1:  219:  int const argCount = sizeof(arszArgs) / sizeof(char *);
-:  220:
-:  221:  ctutil_Options_t stOptions;
1:  222:  memset(&stOptions, 0, sizeof(stOptions));
1:  223:  statusCode_t const result = ctutil_EvaluateEarlyOptions(argCount, arszArgs, &stOptions);
-:  224:
1*:  225:  ASSERT_EQ(CTUTIL_SUCCESS, result);
1*:  226:  EXPECT_STREQ("somethingOther", szArg00);
1*:  227:  EXPECT_STREQ("-x", szArg01);
1*:  228:  EXPECT_STREQ("(t)", szArg02);
-:  229:}
------------------
_ZN48EarlyOptionEvaluation_EvaluateShortOption_x_TestC2Ev:
function _ZN48EarlyOptionEvaluation_EvaluateShortOption_x_TestC2Ev called 1 returned 100% blocks executed 100%
1:  208:TEST(EarlyOptionEvaluation, EvaluateShortOption_x)
call    0 returned 1
------------------
_ZN48EarlyOptionEvaluation_EvaluateShortOption_x_TestD0Ev:
function _ZN48EarlyOptionEvaluation_EvaluateShortOption_x_TestD0Ev called 1 returned 100% blocks executed 100%
1:  208:TEST(EarlyOptionEvaluation, EvaluateShortOption_x)
call    0 returned 1
call    1 returned 1
------------------
_ZN48EarlyOptionEvaluation_EvaluateShortOption_x_TestD2Ev:
function _ZN48EarlyOptionEvaluation_EvaluateShortOption_x_TestD2Ev called 1 returned 100% blocks executed 100%
1:  208:TEST(EarlyOptionEvaluation, EvaluateShortOption_x)
call    0 returned 1
------------------
_ZN48EarlyOptionEvaluation_EvaluateShortOption_x_Test8TestBodyEv:
function _ZN48EarlyOptionEvaluation_EvaluateShortOption_x_Test8TestBodyEv called 1 returned 100% blocks executed 26%
1:  208:TEST(EarlyOptionEvaluation, EvaluateShortOption_x)
-:  209:{
1:  210:  char szArg00[] = "somethingOther";
1:  211:  char szArg01[] = "-x";
1:  212:  char szArg02[] = "%28t%29";
-:  213:  char * const arszArgs[]
-:  214:  {
-:  215:    szArg00,
-:  216:    szArg01,
-:  217:    szArg02,
1:  218:  };
1:  219:  int const argCount = sizeof(arszArgs) / sizeof(char *);
-:  220:
-:  221:  ctutil_Options_t stOptions;
1:  222:  memset(&stOptions, 0, sizeof(stOptions));
1:  223:  statusCode_t const result = ctutil_EvaluateEarlyOptions(argCount, arszArgs, &stOptions);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
-:  224:
1*:  225:  ASSERT_EQ(CTUTIL_SUCCESS, result);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
call   18 returned 1
branch 19 taken 1 (fallthrough)
branch 20 taken 0
call   21 never executed
call   22 never executed
call   23 never executed
1*:  226:  EXPECT_STREQ("somethingOther", szArg00);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
call   18 returned 1
call   19 never executed
call   20 never executed
call   21 never executed
1*:  227:  EXPECT_STREQ("-x", szArg01);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
call   18 returned 1
call   19 never executed
call   20 never executed
call   21 never executed
1*:  228:  EXPECT_STREQ("(t)", szArg02);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
call   18 returned 1
call   19 never executed
call   20 never executed
call   21 never executed
-:  229:}
------------------
-:  230:
-:  231:
4:  232:TEST(EarlyOptionEvaluation, EvaluateShortOption_xMix)
-:  233:{
1:  234:  char szArg00[] = "somethingOther";
1:  235:  char szArg01[] = "-ltxyav";
1:  236:  char szArg02[] = "%28t%29";
-:  237:  char * const arszArgs[]
-:  238:  {
-:  239:    szArg00,
-:  240:    szArg01,
-:  241:    szArg02,
1:  242:  };
1:  243:  int const argCount = sizeof(arszArgs) / sizeof(char *);
-:  244:
-:  245:  ctutil_Options_t stOptions;
1:  246:  memset(&stOptions, 0, sizeof(stOptions));
1:  247:  statusCode_t const result = ctutil_EvaluateEarlyOptions(argCount, arszArgs, &stOptions);
-:  248:
1*:  249:  ASSERT_EQ(CTUTIL_SUCCESS, result);
1*:  250:  EXPECT_STREQ("somethingOther", szArg00);
1*:  251:  EXPECT_STREQ("-ltxyav", szArg01);
1*:  252:  EXPECT_STREQ("(t)", szArg02);
-:  253:}
------------------
_ZN51EarlyOptionEvaluation_EvaluateShortOption_xMix_TestC2Ev:
function _ZN51EarlyOptionEvaluation_EvaluateShortOption_xMix_TestC2Ev called 1 returned 100% blocks executed 100%
1:  232:TEST(EarlyOptionEvaluation, EvaluateShortOption_xMix)
call    0 returned 1
------------------
_ZN51EarlyOptionEvaluation_EvaluateShortOption_xMix_TestD0Ev:
function _ZN51EarlyOptionEvaluation_EvaluateShortOption_xMix_TestD0Ev called 1 returned 100% blocks executed 100%
1:  232:TEST(EarlyOptionEvaluation, EvaluateShortOption_xMix)
call    0 returned 1
call    1 returned 1
------------------
_ZN51EarlyOptionEvaluation_EvaluateShortOption_xMix_TestD2Ev:
function _ZN51EarlyOptionEvaluation_EvaluateShortOption_xMix_TestD2Ev called 1 returned 100% blocks executed 100%
1:  232:TEST(EarlyOptionEvaluation, EvaluateShortOption_xMix)
call    0 returned 1
------------------
_ZN51EarlyOptionEvaluation_EvaluateShortOption_xMix_Test8TestBodyEv:
function _ZN51EarlyOptionEvaluation_EvaluateShortOption_xMix_Test8TestBodyEv called 1 returned 100% blocks executed 26%
1:  232:TEST(EarlyOptionEvaluation, EvaluateShortOption_xMix)
-:  233:{
1:  234:  char szArg00[] = "somethingOther";
1:  235:  char szArg01[] = "-ltxyav";
1:  236:  char szArg02[] = "%28t%29";
-:  237:  char * const arszArgs[]
-:  238:  {
-:  239:    szArg00,
-:  240:    szArg01,
-:  241:    szArg02,
1:  242:  };
1:  243:  int const argCount = sizeof(arszArgs) / sizeof(char *);
-:  244:
-:  245:  ctutil_Options_t stOptions;
1:  246:  memset(&stOptions, 0, sizeof(stOptions));
1:  247:  statusCode_t const result = ctutil_EvaluateEarlyOptions(argCount, arszArgs, &stOptions);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
-:  248:
1*:  249:  ASSERT_EQ(CTUTIL_SUCCESS, result);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
call   18 returned 1
branch 19 taken 1 (fallthrough)
branch 20 taken 0
call   21 never executed
call   22 never executed
call   23 never executed
1*:  250:  EXPECT_STREQ("somethingOther", szArg00);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
call   18 returned 1
call   19 never executed
call   20 never executed
call   21 never executed
1*:  251:  EXPECT_STREQ("-ltxyav", szArg01);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
call   18 returned 1
call   19 never executed
call   20 never executed
call   21 never executed
1*:  252:  EXPECT_STREQ("(t)", szArg02);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
call   18 returned 1
call   19 never executed
call   20 never executed
call   21 never executed
-:  253:}
------------------
-:  254:
-:  255:
4:  256:TEST(EarlyOptionEvaluation, EvaluateShortOption_xqMix)
-:  257:{
1:  258:  char szArg00[] = "somethingOther";
1:  259:  char szArg01[] = "-jftxqyz";
1:  260:  char szArg02[] = "%28t%29";
-:  261:  char * const arszArgs[]
-:  262:  {
-:  263:    szArg00,
-:  264:    szArg01,
-:  265:    szArg02,
1:  266:  };
1:  267:  int const argCount = sizeof(arszArgs) / sizeof(char *);
-:  268:
-:  269:  ctutil_Options_t stOptions;
1:  270:  memset(&stOptions, 0, sizeof(stOptions));
1:  271:  statusCode_t const result = ctutil_EvaluateEarlyOptions(argCount, arszArgs, &stOptions);
-:  272:
1*:  273:  ASSERT_EQ(CTUTIL_SUCCESS, result);
1*:  274:  EXPECT_STREQ("somethingOther", szArg00);
1*:  275:  EXPECT_TRUE(stOptions.stCommonOptions.quiet);
1*:  276:  EXPECT_STREQ("-jftxqyz", szArg01);
1*:  277:  EXPECT_STREQ("(t)", szArg02);
-:  278:}
------------------
_ZN52EarlyOptionEvaluation_EvaluateShortOption_xqMix_TestC2Ev:
function _ZN52EarlyOptionEvaluation_EvaluateShortOption_xqMix_TestC2Ev called 1 returned 100% blocks executed 100%
1:  256:TEST(EarlyOptionEvaluation, EvaluateShortOption_xqMix)
call    0 returned 1
------------------
_ZN52EarlyOptionEvaluation_EvaluateShortOption_xqMix_TestD0Ev:
function _ZN52EarlyOptionEvaluation_EvaluateShortOption_xqMix_TestD0Ev called 1 returned 100% blocks executed 100%
1:  256:TEST(EarlyOptionEvaluation, EvaluateShortOption_xqMix)
call    0 returned 1
call    1 returned 1
------------------
_ZN52EarlyOptionEvaluation_EvaluateShortOption_xqMix_TestD2Ev:
function _ZN52EarlyOptionEvaluation_EvaluateShortOption_xqMix_TestD2Ev called 1 returned 100% blocks executed 100%
1:  256:TEST(EarlyOptionEvaluation, EvaluateShortOption_xqMix)
call    0 returned 1
------------------
_ZN52EarlyOptionEvaluation_EvaluateShortOption_xqMix_Test8TestBodyEv:
function _ZN52EarlyOptionEvaluation_EvaluateShortOption_xqMix_Test8TestBodyEv called 1 returned 100% blocks executed 23%
1:  256:TEST(EarlyOptionEvaluation, EvaluateShortOption_xqMix)
-:  257:{
1:  258:  char szArg00[] = "somethingOther";
1:  259:  char szArg01[] = "-jftxqyz";
1:  260:  char szArg02[] = "%28t%29";
-:  261:  char * const arszArgs[]
-:  262:  {
-:  263:    szArg00,
-:  264:    szArg01,
-:  265:    szArg02,
1:  266:  };
1:  267:  int const argCount = sizeof(arszArgs) / sizeof(char *);
-:  268:
-:  269:  ctutil_Options_t stOptions;
1:  270:  memset(&stOptions, 0, sizeof(stOptions));
1:  271:  statusCode_t const result = ctutil_EvaluateEarlyOptions(argCount, arszArgs, &stOptions);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
-:  272:
1*:  273:  ASSERT_EQ(CTUTIL_SUCCESS, result);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
call   18 returned 1
branch 19 taken 1 (fallthrough)
branch 20 taken 0
call   21 never executed
call   22 never executed
call   23 never executed
1*:  274:  EXPECT_STREQ("somethingOther", szArg00);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
call   18 returned 1
call   19 never executed
call   20 never executed
call   21 never executed
1*:  275:  EXPECT_TRUE(stOptions.stCommonOptions.quiet);
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
call    8 never executed
branch  9 never executed
branch 10 never executed
call   11 never executed
branch 12 never executed
branch 13 never executed
call   14 never executed
branch 15 never executed
branch 16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 returned 1
call   21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
1*:  276:  EXPECT_STREQ("-jftxqyz", szArg01);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
call   18 returned 1
call   19 never executed
call   20 never executed
call   21 never executed
1*:  277:  EXPECT_STREQ("(t)", szArg02);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
call   18 returned 1
call   19 never executed
call   20 never executed
call   21 never executed
-:  278:}
------------------
-:  279:
-:  280:
4:  281:TEST(EarlyOptionEvaluation, EvaluateLongOption_q)
-:  282:{
1:  283:  char szArg00[] = "somethingOther";
1:  284:  char szArg01[] = "--quiet";
-:  285:  char * const arszArgs[]
-:  286:  {
-:  287:    szArg00,
-:  288:    szArg01,
1:  289:  };
1:  290:  int const argCount = sizeof(arszArgs) / sizeof(char *);
-:  291:
-:  292:  ctutil_Options_t stOptions;
1:  293:  memset(&stOptions, 0, sizeof(stOptions));
1:  294:  statusCode_t const result = ctutil_EvaluateEarlyOptions(argCount, arszArgs, &stOptions);
-:  295:
1*:  296:  ASSERT_EQ(CTUTIL_SUCCESS, result);
1*:  297:  EXPECT_STREQ("somethingOther", szArg00);
1*:  298:  EXPECT_TRUE(stOptions.stCommonOptions.quiet);
-:  299:}
------------------
_ZN47EarlyOptionEvaluation_EvaluateLongOption_q_TestC2Ev:
function _ZN47EarlyOptionEvaluation_EvaluateLongOption_q_TestC2Ev called 1 returned 100% blocks executed 100%
1:  281:TEST(EarlyOptionEvaluation, EvaluateLongOption_q)
call    0 returned 1
------------------
_ZN47EarlyOptionEvaluation_EvaluateLongOption_q_TestD0Ev:
function _ZN47EarlyOptionEvaluation_EvaluateLongOption_q_TestD0Ev called 1 returned 100% blocks executed 100%
1:  281:TEST(EarlyOptionEvaluation, EvaluateLongOption_q)
call    0 returned 1
call    1 returned 1
------------------
_ZN47EarlyOptionEvaluation_EvaluateLongOption_q_TestD2Ev:
function _ZN47EarlyOptionEvaluation_EvaluateLongOption_q_TestD2Ev called 1 returned 100% blocks executed 100%
1:  281:TEST(EarlyOptionEvaluation, EvaluateLongOption_q)
call    0 returned 1
------------------
_ZN47EarlyOptionEvaluation_EvaluateLongOption_q_Test8TestBodyEv:
function _ZN47EarlyOptionEvaluation_EvaluateLongOption_q_Test8TestBodyEv called 1 returned 100% blocks executed 25%
1:  281:TEST(EarlyOptionEvaluation, EvaluateLongOption_q)
-:  282:{
1:  283:  char szArg00[] = "somethingOther";
1:  284:  char szArg01[] = "--quiet";
-:  285:  char * const arszArgs[]
-:  286:  {
-:  287:    szArg00,
-:  288:    szArg01,
1:  289:  };
1:  290:  int const argCount = sizeof(arszArgs) / sizeof(char *);
-:  291:
-:  292:  ctutil_Options_t stOptions;
1:  293:  memset(&stOptions, 0, sizeof(stOptions));
1:  294:  statusCode_t const result = ctutil_EvaluateEarlyOptions(argCount, arszArgs, &stOptions);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
-:  295:
1*:  296:  ASSERT_EQ(CTUTIL_SUCCESS, result);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
call   18 returned 1
branch 19 taken 1 (fallthrough)
branch 20 taken 0
call   21 never executed
call   22 never executed
call   23 never executed
1*:  297:  EXPECT_STREQ("somethingOther", szArg00);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
call   18 returned 1
call   19 never executed
call   20 never executed
call   21 never executed
1*:  298:  EXPECT_TRUE(stOptions.stCommonOptions.quiet);
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
call    8 never executed
branch  9 never executed
branch 10 never executed
call   11 never executed
branch 12 never executed
branch 13 never executed
call   14 never executed
branch 15 never executed
branch 16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 returned 1
call   21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
-:  299:}
------------------
-:  300:
-:  301:
4:  302:TEST(EarlyOptionEvaluation, EvaluateLongOption_x)
-:  303:{
1:  304:  char szArg00[] = "somethingOther";
1:  305:  char szArg01[] = "--extract-from-uri-encoding";
1:  306:  char szArg02[] = "%28t%29";
-:  307:  char * const arszArgs[]
-:  308:  {
-:  309:    szArg00,
-:  310:    szArg01,
-:  311:    szArg02,
1:  312:  };
1:  313:  int const argCount = sizeof(arszArgs) / sizeof(char *);
-:  314:
-:  315:  ctutil_Options_t stOptions;
1:  316:  memset(&stOptions, 0, sizeof(stOptions));
1:  317:  statusCode_t const result = ctutil_EvaluateEarlyOptions(argCount, arszArgs, &stOptions);
-:  318:
1*:  319:  ASSERT_EQ(CTUTIL_SUCCESS, result);
1*:  320:  EXPECT_STREQ("somethingOther", szArg00);
1*:  321:  EXPECT_STREQ("--extract-from-uri-encoding", szArg01);
1*:  322:  EXPECT_STREQ("(t)", szArg02);
-:  323:}
------------------
_ZN47EarlyOptionEvaluation_EvaluateLongOption_x_TestC2Ev:
function _ZN47EarlyOptionEvaluation_EvaluateLongOption_x_TestC2Ev called 1 returned 100% blocks executed 100%
1:  302:TEST(EarlyOptionEvaluation, EvaluateLongOption_x)
call    0 returned 1
------------------
_ZN47EarlyOptionEvaluation_EvaluateLongOption_x_TestD0Ev:
function _ZN47EarlyOptionEvaluation_EvaluateLongOption_x_TestD0Ev called 1 returned 100% blocks executed 100%
1:  302:TEST(EarlyOptionEvaluation, EvaluateLongOption_x)
call    0 returned 1
call    1 returned 1
------------------
_ZN47EarlyOptionEvaluation_EvaluateLongOption_x_TestD2Ev:
function _ZN47EarlyOptionEvaluation_EvaluateLongOption_x_TestD2Ev called 1 returned 100% blocks executed 100%
1:  302:TEST(EarlyOptionEvaluation, EvaluateLongOption_x)
call    0 returned 1
------------------
_ZN47EarlyOptionEvaluation_EvaluateLongOption_x_Test8TestBodyEv:
function _ZN47EarlyOptionEvaluation_EvaluateLongOption_x_Test8TestBodyEv called 1 returned 100% blocks executed 26%
1:  302:TEST(EarlyOptionEvaluation, EvaluateLongOption_x)
-:  303:{
1:  304:  char szArg00[] = "somethingOther";
1:  305:  char szArg01[] = "--extract-from-uri-encoding";
1:  306:  char szArg02[] = "%28t%29";
-:  307:  char * const arszArgs[]
-:  308:  {
-:  309:    szArg00,
-:  310:    szArg01,
-:  311:    szArg02,
1:  312:  };
1:  313:  int const argCount = sizeof(arszArgs) / sizeof(char *);
-:  314:
-:  315:  ctutil_Options_t stOptions;
1:  316:  memset(&stOptions, 0, sizeof(stOptions));
1:  317:  statusCode_t const result = ctutil_EvaluateEarlyOptions(argCount, arszArgs, &stOptions);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
-:  318:
1*:  319:  ASSERT_EQ(CTUTIL_SUCCESS, result);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
call   18 returned 1
branch 19 taken 1 (fallthrough)
branch 20 taken 0
call   21 never executed
call   22 never executed
call   23 never executed
1*:  320:  EXPECT_STREQ("somethingOther", szArg00);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
call   18 returned 1
call   19 never executed
call   20 never executed
call   21 never executed
1*:  321:  EXPECT_STREQ("--extract-from-uri-encoding", szArg01);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
call   18 returned 1
call   19 never executed
call   20 never executed
call   21 never executed
1*:  322:  EXPECT_STREQ("(t)", szArg02);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
call   18 returned 1
call   19 never executed
call   20 never executed
call   21 never executed
-:  323:}
------------------
-:  324:
-:  325:
4:  326:TEST(EarlyOptionEvaluation, EvaluateLongOption_xqMix)
-:  327:{
1:  328:  char szArg00[] = "somethingOther";
1:  329:  char szArg01[] = "--quiet";
1:  330:  char szArg02[] = "--otherOption";
1:  331:  char szArg03[] = "%28t%29";
1:  332:  char szArg04[] = "-mdl";
1:  333:  char szArg05[] = "--extract-from-uri-encoding";
-:  334:  char * const arszArgs[]
-:  335:  {
-:  336:    szArg00,
-:  337:    szArg01,
-:  338:    szArg02,
-:  339:    szArg03,
-:  340:    szArg04,
-:  341:    szArg05,
1:  342:  };
1:  343:  int const argCount = sizeof(arszArgs) / sizeof(char *);
-:  344:
-:  345:  ctutil_Options_t stOptions;
1:  346:  memset(&stOptions, 0, sizeof(stOptions));
1:  347:  statusCode_t const result = ctutil_EvaluateEarlyOptions(argCount, arszArgs, &stOptions);
-:  348:
1*:  349:  ASSERT_EQ(CTUTIL_SUCCESS, result);
1*:  350:  EXPECT_STREQ("somethingOther", szArg00);
1*:  351:  EXPECT_TRUE(stOptions.stCommonOptions.quiet);
1*:  352:  EXPECT_STREQ("--quiet", szArg01);
1*:  353:  EXPECT_STREQ("--otherOption", szArg02);
1*:  354:  EXPECT_STREQ("(t)", szArg03);
1*:  355:  EXPECT_STREQ("-mdl", szArg04);
1*:  356:  EXPECT_STREQ("--extract-from-uri-encoding", szArg05);
-:  357:}
------------------
_ZN51EarlyOptionEvaluation_EvaluateLongOption_xqMix_TestC2Ev:
function _ZN51EarlyOptionEvaluation_EvaluateLongOption_xqMix_TestC2Ev called 1 returned 100% blocks executed 100%
1:  326:TEST(EarlyOptionEvaluation, EvaluateLongOption_xqMix)
call    0 returned 1
------------------
_ZN51EarlyOptionEvaluation_EvaluateLongOption_xqMix_TestD0Ev:
function _ZN51EarlyOptionEvaluation_EvaluateLongOption_xqMix_TestD0Ev called 1 returned 100% blocks executed 100%
1:  326:TEST(EarlyOptionEvaluation, EvaluateLongOption_xqMix)
call    0 returned 1
call    1 returned 1
------------------
_ZN51EarlyOptionEvaluation_EvaluateLongOption_xqMix_TestD2Ev:
function _ZN51EarlyOptionEvaluation_EvaluateLongOption_xqMix_TestD2Ev called 1 returned 100% blocks executed 100%
1:  326:TEST(EarlyOptionEvaluation, EvaluateLongOption_xqMix)
call    0 returned 1
------------------
_ZN51EarlyOptionEvaluation_EvaluateLongOption_xqMix_Test8TestBodyEv:
function _ZN51EarlyOptionEvaluation_EvaluateLongOption_xqMix_Test8TestBodyEv called 1 returned 100% blocks executed 22%
1:  326:TEST(EarlyOptionEvaluation, EvaluateLongOption_xqMix)
-:  327:{
1:  328:  char szArg00[] = "somethingOther";
1:  329:  char szArg01[] = "--quiet";
1:  330:  char szArg02[] = "--otherOption";
1:  331:  char szArg03[] = "%28t%29";
1:  332:  char szArg04[] = "-mdl";
1:  333:  char szArg05[] = "--extract-from-uri-encoding";
-:  334:  char * const arszArgs[]
-:  335:  {
-:  336:    szArg00,
-:  337:    szArg01,
-:  338:    szArg02,
-:  339:    szArg03,
-:  340:    szArg04,
-:  341:    szArg05,
1:  342:  };
1:  343:  int const argCount = sizeof(arszArgs) / sizeof(char *);
-:  344:
-:  345:  ctutil_Options_t stOptions;
1:  346:  memset(&stOptions, 0, sizeof(stOptions));
1:  347:  statusCode_t const result = ctutil_EvaluateEarlyOptions(argCount, arszArgs, &stOptions);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
-:  348:
1*:  349:  ASSERT_EQ(CTUTIL_SUCCESS, result);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
call   18 returned 1
branch 19 taken 1 (fallthrough)
branch 20 taken 0
call   21 never executed
call   22 never executed
call   23 never executed
1*:  350:  EXPECT_STREQ("somethingOther", szArg00);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
call   18 returned 1
call   19 never executed
call   20 never executed
call   21 never executed
1*:  351:  EXPECT_TRUE(stOptions.stCommonOptions.quiet);
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
call    8 never executed
branch  9 never executed
branch 10 never executed
call   11 never executed
branch 12 never executed
branch 13 never executed
call   14 never executed
branch 15 never executed
branch 16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 returned 1
call   21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
1*:  352:  EXPECT_STREQ("--quiet", szArg01);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
call   18 returned 1
call   19 never executed
call   20 never executed
call   21 never executed
1*:  353:  EXPECT_STREQ("--otherOption", szArg02);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
call   18 returned 1
call   19 never executed
call   20 never executed
call   21 never executed
1*:  354:  EXPECT_STREQ("(t)", szArg03);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
call   18 returned 1
call   19 never executed
call   20 never executed
call   21 never executed
1*:  355:  EXPECT_STREQ("-mdl", szArg04);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
call   18 returned 1
call   19 never executed
call   20 never executed
call   21 never executed
1*:  356:  EXPECT_STREQ("--extract-from-uri-encoding", szArg05);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
call   18 returned 1
call   19 never executed
call   20 never executed
call   21 never executed
-:  357:}
------------------
-:  358:
-:  359:
4:  360:TEST(EarlyOptionEvaluation, DecodeUriIfPredefined)
-:  361:{
1:  362:  char szArg00[] = "somethingOther";
1:  363:  char szArg01[] = "%28t%29";
-:  364:  char * const arszArgs[]
-:  365:  {
-:  366:    szArg00,
-:  367:    szArg01,
1:  368:  };
1:  369:  int const argCount = sizeof(arszArgs) / sizeof(char *);
-:  370:
-:  371:  ctutil_Options_t stOptions;
1:  372:  memset(&stOptions, 0, sizeof(stOptions));
1:  373:  stOptions.stCommonOptions.extractFromUri = true;
1:  374:  statusCode_t const result = ctutil_EvaluateEarlyOptions(argCount, arszArgs, &stOptions);
-:  375:
1*:  376:  ASSERT_EQ(CTUTIL_SUCCESS, result);
1*:  377:  EXPECT_STREQ("somethingOther", szArg00);
1*:  378:  EXPECT_STREQ("(t)", szArg01);
-:  379:}
-:  380:
-:  381:
-:  382://---- End of source file ------------------------------------------------------
-:  383:
