-:    0:Source:test-src/libconfigtoolutils/test_CommonMain.cc
-:    1://------------------------------------------------------------------------------
-:    2:// This Source Code Form is subject to the terms of the Mozilla Public
-:    3:// License, v. 2.0. If a copy of the MPL was not distributed with this
-:    4:// file, You can obtain one at http://mozilla.org/MPL/2.0/.
-:    5://
-:    6:// This file is part of project modular-config-tools (PTXdist package modular-config-tools).
-:    7://
-:    8:// Copyright (c) 2017-2022 WAGO GmbH & Co. KG
-:    9://------------------------------------------------------------------------------
-:   10://------------------------------------------------------------------------------
-:   11:///  \file     test_CommonMain.cc
-:   12:///
-:   13:///  \brief    Test for config tool common main function.
-:   14:///
-:   15:///  \author   PEn: WAGO GmbH & Co. KG
-:   16://------------------------------------------------------------------------------
-:   17:
-:   18://------------------------------------------------------------------------------
-:   19:// include files
-:   20://------------------------------------------------------------------------------
-:   21:#include "wc/structuring.h"
-:   22:#include "ctutil/common_main.h"
-:   23:#include "ctparts/common_main_defaults.h"
-:   24:#include "ctparts/ctmain.h"
-:   25:#include <gtest/gtest.h>
-:   26:#include <gmock/gmock.h>
-:   27:
-:   28:using ::testing::Exactly;
-:   29:using ::testing::AtLeast;
-:   30:using ::testing::AtMost;
-:   31:using ::testing::AnyNumber;
-:   32:using ::testing::WithArgs;
-:   33:using ::testing::Invoke;
-:   34:using ::testing::Return;
-:   35:
-:   36://------------------------------------------------------------------------------
-:   37:// macros
-:   38://------------------------------------------------------------------------------
-:   39:
-:   40://------------------------------------------------------------------------------
-:   41:// defines; structure, enumeration and type definitions
-:   42://------------------------------------------------------------------------------
-:   43:class ICommonFunction
-:   44:{
-:   45:  public:
5*:   46:    virtual              ~ICommonFunction() {};
------------------
_ZN15ICommonFunctionD0Ev:
function _ZN15ICommonFunctionD0Ev called 0 returned 0% blocks executed 0%
#####:   46:    virtual              ~ICommonFunction() {};
call    0 never executed
call    1 never executed
------------------
_ZN15ICommonFunctionD2Ev:
function _ZN15ICommonFunctionD2Ev called 5 returned 100% blocks executed 100%
5:   46:    virtual              ~ICommonFunction() {};
------------------
-:   47:    virtual void         PrintInfoText(char const * const szCallString) const = 0;
-:   48:    virtual statusCode_t SetOptionDefaults(ctutil_Options_t * const pstOptions) const = 0;
-:   49:    virtual void         ReleaseSpecificOptions(ctutil_Options_t * const pstOptions) const = 0;
-:   50:    virtual statusCode_t EvaluateEarlyOptions(int const argc,
-:   51:                                              char * const argv[],
-:   52:                                              ctutil_Options_t * const pstOptions) const = 0;
-:   53:    virtual statusCode_t EvaluateOptions(int const argc,
-:   54:                                         char * const argv[],
-:   55:                                         ctutil_Options_t * const pstOptions) const = 0;
-:   56:    virtual statusCode_t InitSpecificResources(ctutil_ResourcesSpecific_t * * const ppstResources) const = 0;
-:   57:    virtual void         ReleaseSpecificResources(ctutil_ResourcesSpecific_t * * const ppstResources) const = 0;
-:   58:};
-:   59:
-:   60:class MockCommonFunctions;
-:   61:
-:   62:struct ctparts_commonMainContext
-:   63:{
-:   64:  MockCommonFunctions * pMock;
-:   65:};
-:   66:
-:   67:class MockCommonFunctions : public ICommonFunction
-:   68:{
-:   69:  public:
5*:   70:    virtual ~MockCommonFunctions() {};
------------------
_ZN19MockCommonFunctionsD0Ev:
function _ZN19MockCommonFunctionsD0Ev called 0 returned 0% blocks executed 0%
#####:   70:    virtual ~MockCommonFunctions() {};
call    0 never executed
call    1 never executed
------------------
_ZN19MockCommonFunctionsD2Ev:
function _ZN19MockCommonFunctionsD2Ev called 5 returned 100% blocks executed 100%
5:   70:    virtual ~MockCommonFunctions() {};
call    0 returned 5
call    1 returned 5
call    2 returned 5
call    3 returned 5
call    4 returned 5
call    5 returned 5
call    6 returned 5
call    7 returned 5
------------------
10:   71:    MOCK_CONST_METHOD1(SetOptionDefaults, statusCode_t(ctutil_Options_t * const pstOptions));
------------------
_ZNK19MockCommonFunctions23gmock_SetOptionDefaultsERKN7testing7MatcherIP14ctutil_OptionsEE:
function _ZNK19MockCommonFunctions23gmock_SetOptionDefaultsERKN7testing7MatcherIP14ctutil_OptionsEE called 5 returned 100% blocks executed 78%
5:   71:    MOCK_CONST_METHOD1(SetOptionDefaults, statusCode_t(ctutil_Options_t * const pstOptions));
call    0 returned 5
call    1 returned 5
call    2 returned 5
branch  3 taken 5 (fallthrough)
branch  4 taken 0 (throw)
call    5 returned 5
call    6 never executed
------------------
_ZNK19MockCommonFunctions17SetOptionDefaultsEP14ctutil_Options:
function _ZNK19MockCommonFunctions17SetOptionDefaultsEP14ctutil_Options called 5 returned 100% blocks executed 100%
5:   71:    MOCK_CONST_METHOD1(SetOptionDefaults, statusCode_t(ctutil_Options_t * const pstOptions));
call    0 returned 5
call    1 returned 5
call    2 returned 5
------------------
function _ZN19MockCommonFunctions26SetOptionDefaultsFollowersEP14ctutil_Options called 4 returned 100% blocks executed 61%
4:   72:    statusCode_t SetOptionDefaultsFollowers(ctutil_Options_t * const pstOptions)
-:   73:    {
4:   74:      pstOptions->pstSpecificOptions = (ctutil_OptionsSpecific_t *)0x1;
8:   75:      EXPECT_CALL(*this, ReleaseSpecificOptions(pstOptions))
call    0 returned 4
call    1 returned 4
branch  2 taken 4 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 4
branch  5 taken 4 (fallthrough)
branch  6 taken 0 (throw)
call    7 returned 4
call    8 returned 4
branch  9 taken 4 (fallthrough)
branch 10 taken 0 (throw)
call   11 returned 4
call   12 never executed
call   13 never executed
8:   76:        .Times(Exactly(1))
call    0 returned 4
branch  1 taken 4 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 4
branch  4 taken 4 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 4
call    7 returned 4
call    8 never executed
4:   77:        .RetiresOnSaturation();
call    0 returned 4
branch  1 taken 4 (fallthrough)
branch  2 taken 0 (throw)
-:   78:
4:   79:      return CTUTIL_SUCCESS;
-:   80:    }
9:   81:    MOCK_CONST_METHOD1(ReleaseSpecificOptions, void(ctutil_Options_t * const pstOptions));
------------------
_ZNK19MockCommonFunctions28gmock_ReleaseSpecificOptionsERKN7testing7MatcherIP14ctutil_OptionsEE:
function _ZNK19MockCommonFunctions28gmock_ReleaseSpecificOptionsERKN7testing7MatcherIP14ctutil_OptionsEE called 5 returned 100% blocks executed 78%
5:   81:    MOCK_CONST_METHOD1(ReleaseSpecificOptions, void(ctutil_Options_t * const pstOptions));
call    0 returned 5
call    1 returned 5
call    2 returned 5
branch  3 taken 5 (fallthrough)
branch  4 taken 0 (throw)
call    5 returned 5
call    6 never executed
------------------
_ZNK19MockCommonFunctions22ReleaseSpecificOptionsEP14ctutil_Options:
function _ZNK19MockCommonFunctions22ReleaseSpecificOptionsEP14ctutil_Options called 4 returned 100% blocks executed 100%
4:   81:    MOCK_CONST_METHOD1(ReleaseSpecificOptions, void(ctutil_Options_t * const pstOptions));
call    0 returned 4
call    1 returned 4
call    2 returned 4
------------------
5*:   82:    MOCK_CONST_METHOD1(PrintInfoText, void(char const * const szCallString));
------------------
_ZNK19MockCommonFunctions19gmock_PrintInfoTextERKN7testing7MatcherIPKcEE:
function _ZNK19MockCommonFunctions19gmock_PrintInfoTextERKN7testing7MatcherIPKcEE called 5 returned 100% blocks executed 78%
5:   82:    MOCK_CONST_METHOD1(PrintInfoText, void(char const * const szCallString));
call    0 returned 5
call    1 returned 5
call    2 returned 5
branch  3 taken 5 (fallthrough)
branch  4 taken 0 (throw)
call    5 returned 5
call    6 never executed
------------------
_ZNK19MockCommonFunctions13PrintInfoTextEPKc:
function _ZNK19MockCommonFunctions13PrintInfoTextEPKc called 0 returned 0% blocks executed 0%
#####:   82:    MOCK_CONST_METHOD1(PrintInfoText, void(char const * const szCallString));
call    0 never executed
call    1 never executed
call    2 never executed
------------------
9:   83:    MOCK_CONST_METHOD3(EvaluateEarlyOptions, statusCode_t(int const argc,
------------------
_ZNK19MockCommonFunctions26gmock_EvaluateEarlyOptionsERKN7testing7MatcherIiEERKNS1_IPKPcEERKNS1_IP14ctutil_OptionsEE:
function _ZNK19MockCommonFunctions26gmock_EvaluateEarlyOptionsERKN7testing7MatcherIiEERKNS1_IPKPcEERKNS1_IP14ctutil_OptionsEE called 5 returned 100% blocks executed 58%
5:   83:    MOCK_CONST_METHOD3(EvaluateEarlyOptions, statusCode_t(int const argc,
call    0 returned 5
call    1 returned 5
call    2 returned 5
branch  3 taken 5 (fallthrough)
branch  4 taken 0 (throw)
call    5 returned 5
branch  6 taken 5 (fallthrough)
branch  7 taken 0 (throw)
call    8 returned 5
branch  9 taken 5 (fallthrough)
branch 10 taken 0 (throw)
call   11 returned 5
call   12 returned 5
call   13 returned 5
call   14 never executed
call   15 never executed
call   16 never executed
------------------
_ZNK19MockCommonFunctions20EvaluateEarlyOptionsEiPKPcP14ctutil_Options:
function _ZNK19MockCommonFunctions20EvaluateEarlyOptionsEiPKPcP14ctutil_Options called 4 returned 100% blocks executed 100%
4:   83:    MOCK_CONST_METHOD3(EvaluateEarlyOptions, statusCode_t(int const argc,
call    0 returned 4
call    1 returned 4
call    2 returned 4
call    3 returned 4
call    4 returned 4
------------------
-:   84:                                             char * const argv[],
-:   85:                                             ctutil_Options_t * const pstOptions));
8:   86:    MOCK_CONST_METHOD3(EvaluateOptions, statusCode_t(int const argc,
------------------
_ZNK19MockCommonFunctions21gmock_EvaluateOptionsERKN7testing7MatcherIiEERKNS1_IPKPcEERKNS1_IP14ctutil_OptionsEE:
function _ZNK19MockCommonFunctions21gmock_EvaluateOptionsERKN7testing7MatcherIiEERKNS1_IPKPcEERKNS1_IP14ctutil_OptionsEE called 5 returned 100% blocks executed 58%
5:   86:    MOCK_CONST_METHOD3(EvaluateOptions, statusCode_t(int const argc,
call    0 returned 5
call    1 returned 5
call    2 returned 5
branch  3 taken 5 (fallthrough)
branch  4 taken 0 (throw)
call    5 returned 5
branch  6 taken 5 (fallthrough)
branch  7 taken 0 (throw)
call    8 returned 5
branch  9 taken 5 (fallthrough)
branch 10 taken 0 (throw)
call   11 returned 5
call   12 returned 5
call   13 returned 5
call   14 never executed
call   15 never executed
call   16 never executed
------------------
_ZNK19MockCommonFunctions15EvaluateOptionsEiPKPcP14ctutil_Options:
function _ZNK19MockCommonFunctions15EvaluateOptionsEiPKPcP14ctutil_Options called 3 returned 100% blocks executed 100%
3:   86:    MOCK_CONST_METHOD3(EvaluateOptions, statusCode_t(int const argc,
call    0 returned 3
call    1 returned 3
call    2 returned 3
call    3 returned 3
call    4 returned 3
------------------
-:   87:                                        char * const argv[],
-:   88:                                        ctutil_Options_t * const pstOptions));
7:   89:    MOCK_CONST_METHOD1(InitSpecificResources, statusCode_t(ctutil_ResourcesSpecific_t * * const ppstResources));
------------------
_ZNK19MockCommonFunctions27gmock_InitSpecificResourcesERKN7testing7MatcherIPP24ctutil_ResourcesSpecificEE:
function _ZNK19MockCommonFunctions27gmock_InitSpecificResourcesERKN7testing7MatcherIPP24ctutil_ResourcesSpecificEE called 5 returned 100% blocks executed 78%
5:   89:    MOCK_CONST_METHOD1(InitSpecificResources, statusCode_t(ctutil_ResourcesSpecific_t * * const ppstResources));
call    0 returned 5
call    1 returned 5
call    2 returned 5
branch  3 taken 5 (fallthrough)
branch  4 taken 0 (throw)
call    5 returned 5
call    6 never executed
------------------
_ZNK19MockCommonFunctions21InitSpecificResourcesEPP24ctutil_ResourcesSpecific:
function _ZNK19MockCommonFunctions21InitSpecificResourcesEPP24ctutil_ResourcesSpecific called 2 returned 100% blocks executed 100%
2:   89:    MOCK_CONST_METHOD1(InitSpecificResources, statusCode_t(ctutil_ResourcesSpecific_t * * const ppstResources));
call    0 returned 2
call    1 returned 2
call    2 returned 2
------------------
function _ZN19MockCommonFunctions30InitSpecificResourcesFollowersEPP24ctutil_ResourcesSpecific called 1 returned 100% blocks executed 61%
1:   90:    statusCode_t InitSpecificResourcesFollowers(ctutil_ResourcesSpecific_t * * const ppstResources)
-:   91:    {
2:   92:      EXPECT_CALL(*this, ReleaseSpecificResources(ppstResources))
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
call    7 returned 1
call    8 returned 1
branch  9 taken 1 (fallthrough)
branch 10 taken 0 (throw)
call   11 returned 1
call   12 never executed
call   13 never executed
2:   93:        .Times(Exactly(1))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 returned 1
call    8 never executed
1:   94:        .RetiresOnSaturation();
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
-:   95:
1:   96:      return CTUTIL_SUCCESS;
-:   97:    }
3:   98:    MOCK_CONST_METHOD1(ReleaseSpecificResources, void(ctutil_ResourcesSpecific_t * * const ppstResources));
------------------
_ZNK19MockCommonFunctions30gmock_ReleaseSpecificResourcesERKN7testing7MatcherIPP24ctutil_ResourcesSpecificEE:
function _ZNK19MockCommonFunctions30gmock_ReleaseSpecificResourcesERKN7testing7MatcherIPP24ctutil_ResourcesSpecificEE called 2 returned 100% blocks executed 78%
2:   98:    MOCK_CONST_METHOD1(ReleaseSpecificResources, void(ctutil_ResourcesSpecific_t * * const ppstResources));
call    0 returned 2
call    1 returned 2
call    2 returned 2
branch  3 taken 2 (fallthrough)
branch  4 taken 0 (throw)
call    5 returned 2
call    6 never executed
------------------
_ZNK19MockCommonFunctions24ReleaseSpecificResourcesEPP24ctutil_ResourcesSpecific:
function _ZNK19MockCommonFunctions24ReleaseSpecificResourcesEPP24ctutil_ResourcesSpecific called 1 returned 100% blocks executed 100%
1:   98:    MOCK_CONST_METHOD1(ReleaseSpecificResources, void(ctutil_ResourcesSpecific_t * * const ppstResources));
call    0 returned 1
call    1 returned 1
call    2 returned 1
------------------
-:   99:};
-:  100:
-:  101://------------------------------------------------------------------------------
-:  102:// variables' and constants' definitions
-:  103://------------------------------------------------------------------------------
-:  104:
-:  105://------------------------------------------------------------------------------
-:  106:// test implementation
-:  107://------------------------------------------------------------------------------
function _ZL17SetOptionDefaultsP25ctparts_commonMainContextP14ctutil_Options called 5 returned 100% blocks executed 100%
5:  108:static statusCode_t SetOptionDefaults(ctparts_commonMainContext_t * const pstContext,
-:  109:                                      ctutil_Options_t * const pstOptions)
-:  110:{
-:  111:  // Ever be quiet to avoid any prints on test
5:  112:  pstOptions->stCommonOptions.quiet = true;
5:  113:  return pstContext->pMock->SetOptionDefaults(pstOptions);
call    0 returned 5
-:  114:}
-:  115:
-:  116:
function _ZL22ReleaseSpecificOptionsP25ctparts_commonMainContextP14ctutil_Options called 4 returned 100% blocks executed 100%
4:  117:static void ReleaseSpecificOptions(ctparts_commonMainContext_t * const pstContext,
-:  118:                                   ctutil_Options_t * const pstOptions)
-:  119:{
4:  120:  pstContext->pMock->ReleaseSpecificOptions(pstOptions);
call    0 returned 4
4:  121:  return;
-:  122:}
-:  123:
-:  124:
function _ZL20EvaluateEarlyOptionsP25ctparts_commonMainContextiPKPcP14ctutil_Options called 4 returned 100% blocks executed 100%
4:  125:static statusCode_t EvaluateEarlyOptions(ctparts_commonMainContext_t * const pstContext,
-:  126:                                         int const argc,
-:  127:                                         char * const argv[],
-:  128:                                         ctutil_Options_t * const pstOptions)
-:  129:{
4:  130:  return pstContext->pMock->EvaluateEarlyOptions(argc, argv, pstOptions);
call    0 returned 4
-:  131:}
-:  132:
-:  133:
function _ZL15EvaluateOptionsP25ctparts_commonMainContextiPKPcP14ctutil_Options called 3 returned 100% blocks executed 100%
3:  134:static statusCode_t EvaluateOptions(ctparts_commonMainContext_t * const pstContext,
-:  135:                                    int const argc,
-:  136:                                    char * const argv[],
-:  137:                                    ctutil_Options_t * const pstOptions)
-:  138:{
3:  139:  return pstContext->pMock->EvaluateOptions(argc, argv, pstOptions);
call    0 returned 3
-:  140:}
-:  141:
-:  142:
function _ZL13PrintInfoTextP25ctparts_commonMainContextPKc called 0 returned 0% blocks executed 0%
#####:  143:static void PrintInfoText(ctparts_commonMainContext_t * const pstContext,
-:  144:                          char const * const szCallString)
-:  145:{
#####:  146:  pstContext->pMock->PrintInfoText(szCallString);
call    0 never executed
#####:  147:  return;
-:  148:}
-:  149:
-:  150:
function _ZL21InitSpecificResourcesP25ctparts_commonMainContextPP24ctutil_ResourcesSpecific called 2 returned 100% blocks executed 100%
2:  151:static statusCode_t InitSpecificResources(ctparts_commonMainContext_t * const pstContext,
-:  152:                                          ctutil_ResourcesSpecific_t * * const ppstResources)
-:  153:{
2:  154:  return pstContext->pMock->InitSpecificResources(ppstResources);
call    0 returned 2
-:  155:}
-:  156:
-:  157:
function _ZL24ReleaseSpecificResourcesP25ctparts_commonMainContextPP24ctutil_ResourcesSpecific called 1 returned 100% blocks executed 100%
1:  158:static void ReleaseSpecificResources(ctparts_commonMainContext_t * const pstContext,
-:  159:                                     ctutil_ResourcesSpecific_t * * const ppstResources)
-:  160:{
1:  161:  pstContext->pMock->ReleaseSpecificResources(ppstResources);
call    0 returned 1
1:  162:  return;
-:  163:}
-:  164:
-:  165:
function ctparts_EvaluateEarlyOptions called 0 returned 0% blocks executed 0%
#####:  166:statusCode_t ctparts_EvaluateEarlyOptions(ctparts_commonMainContext_t * const WC_UNUSED_PARAM(pstContext),
-:  167:                                          int const WC_UNUSED_PARAM(argc),
-:  168:                                          char * const WC_UNUSED_PARAM(argv)[],
-:  169:                                          ctutil_Options_t * const WC_UNUSED_PARAM(pstOptions))
-:  170:{
#####:  171:  return CTUTIL_SUCCESS;
-:  172:}
-:  173:
-:  174:
function ctparts_EvaluateOptions called 0 returned 0% blocks executed 0%
#####:  175:statusCode_t ctparts_EvaluateOptions(ctparts_commonMainContext_t * const WC_UNUSED_PARAM(pstContext),
-:  176:                                     int const WC_UNUSED_PARAM(argc),
-:  177:                                     char * const WC_UNUSED_PARAM(argv)[],
-:  178:                                     ctutil_Options_t * const WC_UNUSED_PARAM(pstOptions))
-:  179:{
#####:  180:  return CTUTIL_SUCCESS;
-:  181:}
-:  182:
-:  183:
function ctparts_ctMain called 1 returned 100% blocks executed 100%
1:  184:exitCode_t ctparts_ctMain(int const WC_UNUSED_PARAM(argc),
-:  185:                          char * const WC_UNUSED_PARAM(argv)[],
-:  186:                          ctutil_Options_t const * const WC_UNUSED_PARAM(pstOptions),
-:  187:                          ctutil_Resources_t const * const WC_UNUSED_PARAM(pstResources))
-:  188:{
1:  189:  return CTUTIL_EXIT_SUCCESS;
-:  190:}
-:  191:
-:  192:
4:  193:TEST(CommonMain, CheckFlow)
-:  194:{
1:  195:  char szArg00[] = "common_main";
1:  196:  char szArg01[] = "--testArg1";
-:  197:  char * const arszArgs[]
-:  198:  {
-:  199:    szArg00,
-:  200:    szArg01,
1:  201:  };
1:  202:  int const argCount = sizeof(arszArgs) / sizeof(char *);
-:  203:
-:  204:  // Prepare mock functions
1:  205:  MockCommonFunctions functionMock;
1:  206:  ctparts_commonMainContext stContext = { &functionMock };
-:  207:  ctparts_commonMainFunctions_t stFunctions;
1:  208:  stFunctions.pfPrintInfoText = &PrintInfoText;
1:  209:  stFunctions.pfSetOptionDefaults = &SetOptionDefaults;
1:  210:  stFunctions.pfReleaseSpecificOptions = &ReleaseSpecificOptions;
1:  211:  stFunctions.pfEvaluateEarlyOptions = &EvaluateEarlyOptions;
1:  212:  stFunctions.pfEvaluateOptions = &EvaluateOptions;
1:  213:  stFunctions.pfInitSpecificResources = &InitSpecificResources;
1:  214:  stFunctions.pfReleaseSpecificResources = &ReleaseSpecificResources;
-:  215:
-:  216:  // Set call expectation
2:  217:  EXPECT_CALL(functionMock, SetOptionDefaults(::testing::NotNull()))
2:  218:    .Times(AtLeast(1))
1:  219:    .WillRepeatedly(WithArgs<0>(Invoke(&functionMock, &MockCommonFunctions::SetOptionDefaultsFollowers)));
2:  220:  EXPECT_CALL(functionMock, EvaluateEarlyOptions(argCount, arszArgs, ::testing::_))
2:  221:    .Times(AtLeast(1))
1:  222:    .WillRepeatedly(Return(CTUTIL_SUCCESS));
2:  223:  EXPECT_CALL(functionMock, EvaluateOptions(argCount, arszArgs, ::testing::_))
2:  224:    .Times(AtLeast(1))
1:  225:    .WillRepeatedly(Return(CTUTIL_SUCCESS));
2:  226:  EXPECT_CALL(functionMock, PrintInfoText(::testing::StrEq(szArg00)))
1:  227:    .Times(AtMost(1));
2:  228:  EXPECT_CALL(functionMock, InitSpecificResources(::testing::NotNull()))
2:  229:    .Times(AtLeast(1))
1:  230:    .WillRepeatedly(WithArgs<0>(Invoke(&functionMock, &MockCommonFunctions::InitSpecificResourcesFollowers)));
-:  231:
1:  232:  exitCode_t const result = ctutil_CommonMain(argCount, arszArgs, &stFunctions, &stContext);
1*:  233:  ASSERT_EQ(CTUTIL_SUCCESS, result);
1:  234:}
------------------
_ZN25CommonMain_CheckFlow_TestC2Ev:
function _ZN25CommonMain_CheckFlow_TestC2Ev called 1 returned 100% blocks executed 100%
1:  193:TEST(CommonMain, CheckFlow)
call    0 returned 1
------------------
_ZN25CommonMain_CheckFlow_TestD0Ev:
function _ZN25CommonMain_CheckFlow_TestD0Ev called 1 returned 100% blocks executed 100%
1:  193:TEST(CommonMain, CheckFlow)
call    0 returned 1
call    1 returned 1
------------------
_ZN25CommonMain_CheckFlow_TestD2Ev:
function _ZN25CommonMain_CheckFlow_TestD2Ev called 1 returned 100% blocks executed 100%
1:  193:TEST(CommonMain, CheckFlow)
call    0 returned 1
------------------
_ZN25CommonMain_CheckFlow_Test8TestBodyEv:
function _ZN25CommonMain_CheckFlow_Test8TestBodyEv called 1 returned 100% blocks executed 47%
1:  193:TEST(CommonMain, CheckFlow)
-:  194:{
1:  195:  char szArg00[] = "common_main";
1:  196:  char szArg01[] = "--testArg1";
-:  197:  char * const arszArgs[]
-:  198:  {
-:  199:    szArg00,
-:  200:    szArg01,
1:  201:  };
1:  202:  int const argCount = sizeof(arszArgs) / sizeof(char *);
-:  203:
-:  204:  // Prepare mock functions
1:  205:  MockCommonFunctions functionMock;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
1:  206:  ctparts_commonMainContext stContext = { &functionMock };
-:  207:  ctparts_commonMainFunctions_t stFunctions;
1:  208:  stFunctions.pfPrintInfoText = &PrintInfoText;
1:  209:  stFunctions.pfSetOptionDefaults = &SetOptionDefaults;
1:  210:  stFunctions.pfReleaseSpecificOptions = &ReleaseSpecificOptions;
1:  211:  stFunctions.pfEvaluateEarlyOptions = &EvaluateEarlyOptions;
1:  212:  stFunctions.pfEvaluateOptions = &EvaluateOptions;
1:  213:  stFunctions.pfInitSpecificResources = &InitSpecificResources;
1:  214:  stFunctions.pfReleaseSpecificResources = &ReleaseSpecificResources;
-:  215:
-:  216:  // Set call expectation
2:  217:  EXPECT_CALL(functionMock, SetOptionDefaults(::testing::NotNull()))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
call   16 returned 1
call   17 never executed
call   18 never executed
2:  218:    .Times(AtLeast(1))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 never executed
1:  219:    .WillRepeatedly(WithArgs<0>(Invoke(&functionMock, &MockCommonFunctions::SetOptionDefaultsFollowers)));
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
call    8 returned 1
call    9 returned 1
call   10 never executed
2:  220:  EXPECT_CALL(functionMock, EvaluateEarlyOptions(argCount, arszArgs, ::testing::_))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
call   15 returned 1
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
call   19 returned 1
call   20 returned 1
call   21 returned 1
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
2:  221:    .Times(AtLeast(1))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 never executed
1:  222:    .WillRepeatedly(Return(CTUTIL_SUCCESS));
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 1
call   10 returned 1
call   11 never executed
2:  223:  EXPECT_CALL(functionMock, EvaluateOptions(argCount, arszArgs, ::testing::_))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
call   15 returned 1
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
call   19 returned 1
call   20 returned 1
call   21 returned 1
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
2:  224:    .Times(AtLeast(1))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 never executed
1:  225:    .WillRepeatedly(Return(CTUTIL_SUCCESS));
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 1
call   10 returned 1
call   11 never executed
2:  226:  EXPECT_CALL(functionMock, PrintInfoText(::testing::StrEq(szArg00)))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
call   16 returned 1
call   17 returned 1
call   18 never executed
call   19 never executed
call   20 never executed
1:  227:    .Times(AtMost(1));
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 returned 1
call    8 never executed
2:  228:  EXPECT_CALL(functionMock, InitSpecificResources(::testing::NotNull()))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
call   16 returned 1
call   17 never executed
call   18 never executed
2:  229:    .Times(AtLeast(1))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 never executed
1:  230:    .WillRepeatedly(WithArgs<0>(Invoke(&functionMock, &MockCommonFunctions::InitSpecificResourcesFollowers)));
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
call    8 returned 1
call    9 returned 1
call   10 never executed
-:  231:
1:  232:  exitCode_t const result = ctutil_CommonMain(argCount, arszArgs, &stFunctions, &stContext);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
1*:  233:  ASSERT_EQ(CTUTIL_SUCCESS, result);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
call   18 returned 1
branch 19 taken 1 (fallthrough)
branch 20 taken 0
call   21 never executed
call   22 never executed
call   23 never executed
1:  234:}
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
call    3 never executed
------------------
-:  235:
-:  236:
4:  237:TEST(CommonMain, FailSetOptionDefaults)
-:  238:{
1:  239:  char szArg00[] = "common_main_fail_defaults";
1:  240:  char szArg01[] = "--testArgY";
-:  241:  char * const arszArgs[]
-:  242:  {
-:  243:    szArg00,
-:  244:    szArg01,
1:  245:  };
1:  246:  int const argCount = sizeof(arszArgs) / sizeof(char *);
-:  247:
-:  248:  // Prepare mock functions
1:  249:  MockCommonFunctions functionMock;
1:  250:  ctparts_commonMainContext stContext = { &functionMock };
-:  251:  ctparts_commonMainFunctions_t stFunctions;
1:  252:  stFunctions.pfPrintInfoText = &PrintInfoText;
1:  253:  stFunctions.pfSetOptionDefaults = &SetOptionDefaults;
1:  254:  stFunctions.pfReleaseSpecificOptions = &ReleaseSpecificOptions;
1:  255:  stFunctions.pfEvaluateEarlyOptions = &EvaluateEarlyOptions;
1:  256:  stFunctions.pfEvaluateOptions = &EvaluateOptions;
1:  257:  stFunctions.pfInitSpecificResources = &InitSpecificResources;
1:  258:  stFunctions.pfReleaseSpecificResources = &ReleaseSpecificResources;
-:  259:
-:  260:  // Set call expectation
2:  261:  EXPECT_CALL(functionMock, SetOptionDefaults(::testing::NotNull()))
2:  262:    .Times(AtLeast(1))
1:  263:    .WillRepeatedly(Return(CTUTIL_FAILED));
2:  264:  EXPECT_CALL(functionMock, ReleaseSpecificOptions(::testing::NotNull()))
1:  265:    .Times(AnyNumber());
2:  266:  EXPECT_CALL(functionMock, EvaluateEarlyOptions(::testing::_, ::testing::_, ::testing::_))
1:  267:    .Times(Exactly(0));
2:  268:  EXPECT_CALL(functionMock, EvaluateOptions(::testing::_, ::testing::_, ::testing::_))
1:  269:    .Times(Exactly(0));
2:  270:  EXPECT_CALL(functionMock, PrintInfoText(::testing::_))
1:  271:    .Times(Exactly(0));
2:  272:  EXPECT_CALL(functionMock, InitSpecificResources(::testing::NotNull()))
2:  273:    .Times(AnyNumber())
1:  274:    .WillRepeatedly(WithArgs<0>(Invoke(&functionMock, &MockCommonFunctions::InitSpecificResourcesFollowers)));
-:  275:
1:  276:  exitCode_t const result = ctutil_CommonMain(argCount, arszArgs, &stFunctions, &stContext);
1*:  277:  ASSERT_NE(CTUTIL_SUCCESS, result);
1:  278:}
------------------
_ZN37CommonMain_FailSetOptionDefaults_TestC2Ev:
function _ZN37CommonMain_FailSetOptionDefaults_TestC2Ev called 1 returned 100% blocks executed 100%
1:  237:TEST(CommonMain, FailSetOptionDefaults)
call    0 returned 1
------------------
_ZN37CommonMain_FailSetOptionDefaults_TestD0Ev:
function _ZN37CommonMain_FailSetOptionDefaults_TestD0Ev called 1 returned 100% blocks executed 100%
1:  237:TEST(CommonMain, FailSetOptionDefaults)
call    0 returned 1
call    1 returned 1
------------------
_ZN37CommonMain_FailSetOptionDefaults_TestD2Ev:
function _ZN37CommonMain_FailSetOptionDefaults_TestD2Ev called 1 returned 100% blocks executed 100%
1:  237:TEST(CommonMain, FailSetOptionDefaults)
call    0 returned 1
------------------
_ZN37CommonMain_FailSetOptionDefaults_Test8TestBodyEv:
function _ZN37CommonMain_FailSetOptionDefaults_Test8TestBodyEv called 1 returned 100% blocks executed 48%
1:  237:TEST(CommonMain, FailSetOptionDefaults)
-:  238:{
1:  239:  char szArg00[] = "common_main_fail_defaults";
1:  240:  char szArg01[] = "--testArgY";
-:  241:  char * const arszArgs[]
-:  242:  {
-:  243:    szArg00,
-:  244:    szArg01,
1:  245:  };
1:  246:  int const argCount = sizeof(arszArgs) / sizeof(char *);
-:  247:
-:  248:  // Prepare mock functions
1:  249:  MockCommonFunctions functionMock;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
1:  250:  ctparts_commonMainContext stContext = { &functionMock };
-:  251:  ctparts_commonMainFunctions_t stFunctions;
1:  252:  stFunctions.pfPrintInfoText = &PrintInfoText;
1:  253:  stFunctions.pfSetOptionDefaults = &SetOptionDefaults;
1:  254:  stFunctions.pfReleaseSpecificOptions = &ReleaseSpecificOptions;
1:  255:  stFunctions.pfEvaluateEarlyOptions = &EvaluateEarlyOptions;
1:  256:  stFunctions.pfEvaluateOptions = &EvaluateOptions;
1:  257:  stFunctions.pfInitSpecificResources = &InitSpecificResources;
1:  258:  stFunctions.pfReleaseSpecificResources = &ReleaseSpecificResources;
-:  259:
-:  260:  // Set call expectation
2:  261:  EXPECT_CALL(functionMock, SetOptionDefaults(::testing::NotNull()))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
call   16 returned 1
call   17 never executed
call   18 never executed
2:  262:    .Times(AtLeast(1))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 never executed
1:  263:    .WillRepeatedly(Return(CTUTIL_FAILED));
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 1
call   10 returned 1
call   11 never executed
2:  264:  EXPECT_CALL(functionMock, ReleaseSpecificOptions(::testing::NotNull()))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
call   16 returned 1
call   17 never executed
call   18 never executed
1:  265:    .Times(AnyNumber());
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 returned 1
call    8 never executed
2:  266:  EXPECT_CALL(functionMock, EvaluateEarlyOptions(::testing::_, ::testing::_, ::testing::_))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
call   15 returned 1
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
call   19 returned 1
call   20 returned 1
call   21 returned 1
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
1:  267:    .Times(Exactly(0));
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 returned 1
call    8 never executed
2:  268:  EXPECT_CALL(functionMock, EvaluateOptions(::testing::_, ::testing::_, ::testing::_))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
call   15 returned 1
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
call   19 returned 1
call   20 returned 1
call   21 returned 1
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
1:  269:    .Times(Exactly(0));
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 returned 1
call    8 never executed
2:  270:  EXPECT_CALL(functionMock, PrintInfoText(::testing::_))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 1
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
call   13 returned 1
call   14 never executed
call   15 never executed
1:  271:    .Times(Exactly(0));
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 returned 1
call    8 never executed
2:  272:  EXPECT_CALL(functionMock, InitSpecificResources(::testing::NotNull()))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
call   16 returned 1
call   17 never executed
call   18 never executed
2:  273:    .Times(AnyNumber())
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 never executed
1:  274:    .WillRepeatedly(WithArgs<0>(Invoke(&functionMock, &MockCommonFunctions::InitSpecificResourcesFollowers)));
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
call    8 returned 1
call    9 returned 1
call   10 never executed
-:  275:
1:  276:  exitCode_t const result = ctutil_CommonMain(argCount, arszArgs, &stFunctions, &stContext);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
1*:  277:  ASSERT_NE(CTUTIL_SUCCESS, result);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
call   18 returned 1
branch 19 taken 1 (fallthrough)
branch 20 taken 0
call   21 never executed
call   22 never executed
call   23 never executed
1:  278:}
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
call    3 never executed
------------------
-:  279:
-:  280:
4:  281:TEST(CommonMain, FailEvaluateEarlyOptions)
-:  282:{
1:  283:  char szArg00[] = "common_main_fail_eOpt";
1:  284:  char szArg01[] = "--testArgF";
-:  285:  char * const arszArgs[]
-:  286:  {
-:  287:    szArg00,
-:  288:    szArg01,
1:  289:  };
1:  290:  int const argCount = sizeof(arszArgs) / sizeof(char *);
-:  291:
-:  292:  // Prepare mock functions
1:  293:  MockCommonFunctions functionMock;
1:  294:  ctparts_commonMainContext stContext = { &functionMock };
-:  295:  ctparts_commonMainFunctions_t stFunctions;
1:  296:  stFunctions.pfPrintInfoText = &PrintInfoText;
1:  297:  stFunctions.pfSetOptionDefaults = &SetOptionDefaults;
1:  298:  stFunctions.pfReleaseSpecificOptions = &ReleaseSpecificOptions;
1:  299:  stFunctions.pfEvaluateEarlyOptions = &EvaluateEarlyOptions;
1:  300:  stFunctions.pfEvaluateOptions = &EvaluateOptions;
1:  301:  stFunctions.pfInitSpecificResources = &InitSpecificResources;
1:  302:  stFunctions.pfReleaseSpecificResources = &ReleaseSpecificResources;
-:  303:
-:  304:  // Set call expectation
2:  305:  EXPECT_CALL(functionMock, SetOptionDefaults(::testing::NotNull()))
2:  306:    .Times(AtLeast(1))
1:  307:    .WillRepeatedly(WithArgs<0>(Invoke(&functionMock, &MockCommonFunctions::SetOptionDefaultsFollowers)));
2:  308:  EXPECT_CALL(functionMock, EvaluateEarlyOptions(argCount, arszArgs, ::testing::_))
2:  309:    .Times(AtLeast(1))
1:  310:    .WillRepeatedly(Return(CTUTIL_FAILED));
2:  311:  EXPECT_CALL(functionMock, EvaluateOptions(::testing::_, ::testing::_, ::testing::_))
1:  312:    .Times(Exactly(0));
2:  313:  EXPECT_CALL(functionMock, PrintInfoText(::testing::_))
1:  314:    .Times(Exactly(0));
2:  315:  EXPECT_CALL(functionMock, InitSpecificResources(::testing::NotNull()))
2:  316:    .Times(AnyNumber())
1:  317:    .WillRepeatedly(WithArgs<0>(Invoke(&functionMock, &MockCommonFunctions::InitSpecificResourcesFollowers)));
-:  318:
1:  319:  exitCode_t const result = ctutil_CommonMain(argCount, arszArgs, &stFunctions, &stContext);
1*:  320:  ASSERT_NE(CTUTIL_SUCCESS, result);
1:  321:}
------------------
_ZN40CommonMain_FailEvaluateEarlyOptions_TestC2Ev:
function _ZN40CommonMain_FailEvaluateEarlyOptions_TestC2Ev called 1 returned 100% blocks executed 100%
1:  281:TEST(CommonMain, FailEvaluateEarlyOptions)
call    0 returned 1
------------------
_ZN40CommonMain_FailEvaluateEarlyOptions_TestD0Ev:
function _ZN40CommonMain_FailEvaluateEarlyOptions_TestD0Ev called 1 returned 100% blocks executed 100%
1:  281:TEST(CommonMain, FailEvaluateEarlyOptions)
call    0 returned 1
call    1 returned 1
------------------
_ZN40CommonMain_FailEvaluateEarlyOptions_TestD2Ev:
function _ZN40CommonMain_FailEvaluateEarlyOptions_TestD2Ev called 1 returned 100% blocks executed 100%
1:  281:TEST(CommonMain, FailEvaluateEarlyOptions)
call    0 returned 1
------------------
_ZN40CommonMain_FailEvaluateEarlyOptions_Test8TestBodyEv:
function _ZN40CommonMain_FailEvaluateEarlyOptions_Test8TestBodyEv called 1 returned 100% blocks executed 47%
1:  281:TEST(CommonMain, FailEvaluateEarlyOptions)
-:  282:{
1:  283:  char szArg00[] = "common_main_fail_eOpt";
1:  284:  char szArg01[] = "--testArgF";
-:  285:  char * const arszArgs[]
-:  286:  {
-:  287:    szArg00,
-:  288:    szArg01,
1:  289:  };
1:  290:  int const argCount = sizeof(arszArgs) / sizeof(char *);
-:  291:
-:  292:  // Prepare mock functions
1:  293:  MockCommonFunctions functionMock;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
1:  294:  ctparts_commonMainContext stContext = { &functionMock };
-:  295:  ctparts_commonMainFunctions_t stFunctions;
1:  296:  stFunctions.pfPrintInfoText = &PrintInfoText;
1:  297:  stFunctions.pfSetOptionDefaults = &SetOptionDefaults;
1:  298:  stFunctions.pfReleaseSpecificOptions = &ReleaseSpecificOptions;
1:  299:  stFunctions.pfEvaluateEarlyOptions = &EvaluateEarlyOptions;
1:  300:  stFunctions.pfEvaluateOptions = &EvaluateOptions;
1:  301:  stFunctions.pfInitSpecificResources = &InitSpecificResources;
1:  302:  stFunctions.pfReleaseSpecificResources = &ReleaseSpecificResources;
-:  303:
-:  304:  // Set call expectation
2:  305:  EXPECT_CALL(functionMock, SetOptionDefaults(::testing::NotNull()))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
call   16 returned 1
call   17 never executed
call   18 never executed
2:  306:    .Times(AtLeast(1))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 never executed
1:  307:    .WillRepeatedly(WithArgs<0>(Invoke(&functionMock, &MockCommonFunctions::SetOptionDefaultsFollowers)));
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
call    8 returned 1
call    9 returned 1
call   10 never executed
2:  308:  EXPECT_CALL(functionMock, EvaluateEarlyOptions(argCount, arszArgs, ::testing::_))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
call   15 returned 1
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
call   19 returned 1
call   20 returned 1
call   21 returned 1
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
2:  309:    .Times(AtLeast(1))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 never executed
1:  310:    .WillRepeatedly(Return(CTUTIL_FAILED));
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 1
call   10 returned 1
call   11 never executed
2:  311:  EXPECT_CALL(functionMock, EvaluateOptions(::testing::_, ::testing::_, ::testing::_))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
call   15 returned 1
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
call   19 returned 1
call   20 returned 1
call   21 returned 1
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
1:  312:    .Times(Exactly(0));
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 returned 1
call    8 never executed
2:  313:  EXPECT_CALL(functionMock, PrintInfoText(::testing::_))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 1
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
call   13 returned 1
call   14 never executed
call   15 never executed
1:  314:    .Times(Exactly(0));
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 returned 1
call    8 never executed
2:  315:  EXPECT_CALL(functionMock, InitSpecificResources(::testing::NotNull()))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
call   16 returned 1
call   17 never executed
call   18 never executed
2:  316:    .Times(AnyNumber())
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 never executed
1:  317:    .WillRepeatedly(WithArgs<0>(Invoke(&functionMock, &MockCommonFunctions::InitSpecificResourcesFollowers)));
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
call    8 returned 1
call    9 returned 1
call   10 never executed
-:  318:
1:  319:  exitCode_t const result = ctutil_CommonMain(argCount, arszArgs, &stFunctions, &stContext);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
1*:  320:  ASSERT_NE(CTUTIL_SUCCESS, result);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
call   18 returned 1
branch 19 taken 1 (fallthrough)
branch 20 taken 0
call   21 never executed
call   22 never executed
call   23 never executed
1:  321:}
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
call    3 never executed
------------------
-:  322:
-:  323:
4:  324:TEST(CommonMain, FailEvaluateOptions)
-:  325:{
1:  326:  char szArg00[] = "common_main_fail_opt";
1:  327:  char szArg01[] = "--testArgA";
-:  328:  char * const arszArgs[]
-:  329:  {
-:  330:    szArg00,
-:  331:    szArg01,
1:  332:  };
1:  333:  int const argCount = sizeof(arszArgs) / sizeof(char *);
-:  334:
-:  335:  // Prepare mock functions
1:  336:  MockCommonFunctions functionMock;
1:  337:  ctparts_commonMainContext stContext = { &functionMock };
-:  338:  ctparts_commonMainFunctions_t stFunctions;
1:  339:  stFunctions.pfPrintInfoText = &PrintInfoText;
1:  340:  stFunctions.pfSetOptionDefaults = &SetOptionDefaults;
1:  341:  stFunctions.pfReleaseSpecificOptions = &ReleaseSpecificOptions;
1:  342:  stFunctions.pfEvaluateEarlyOptions = &EvaluateEarlyOptions;
1:  343:  stFunctions.pfEvaluateOptions = &EvaluateOptions;
1:  344:  stFunctions.pfInitSpecificResources = &InitSpecificResources;
1:  345:  stFunctions.pfReleaseSpecificResources = &ReleaseSpecificResources;
-:  346:
-:  347:  // Set call expectation
2:  348:  EXPECT_CALL(functionMock, SetOptionDefaults(::testing::NotNull()))
2:  349:    .Times(AtLeast(1))
1:  350:    .WillRepeatedly(WithArgs<0>(Invoke(&functionMock, &MockCommonFunctions::SetOptionDefaultsFollowers)));
2:  351:  EXPECT_CALL(functionMock, EvaluateEarlyOptions(argCount, arszArgs, ::testing::_))
2:  352:    .Times(AtLeast(1))
1:  353:    .WillRepeatedly(Return(CTUTIL_SUCCESS));
2:  354:  EXPECT_CALL(functionMock, EvaluateOptions(argCount, arszArgs, ::testing::_))
2:  355:    .Times(AtLeast(1))
1:  356:    .WillRepeatedly(Return(CTUTIL_FAILED));
2:  357:  EXPECT_CALL(functionMock, PrintInfoText(::testing::_))
1:  358:    .Times(Exactly(0));
2:  359:  EXPECT_CALL(functionMock, InitSpecificResources(::testing::NotNull()))
2:  360:    .Times(AnyNumber())
1:  361:    .WillRepeatedly(WithArgs<0>(Invoke(&functionMock, &MockCommonFunctions::InitSpecificResourcesFollowers)));
-:  362:
1:  363:  exitCode_t const result = ctutil_CommonMain(argCount, arszArgs, &stFunctions, &stContext);
1*:  364:  ASSERT_NE(CTUTIL_SUCCESS, result);
1:  365:}
------------------
_ZN35CommonMain_FailEvaluateOptions_TestC2Ev:
function _ZN35CommonMain_FailEvaluateOptions_TestC2Ev called 1 returned 100% blocks executed 100%
1:  324:TEST(CommonMain, FailEvaluateOptions)
call    0 returned 1
------------------
_ZN35CommonMain_FailEvaluateOptions_TestD0Ev:
function _ZN35CommonMain_FailEvaluateOptions_TestD0Ev called 1 returned 100% blocks executed 100%
1:  324:TEST(CommonMain, FailEvaluateOptions)
call    0 returned 1
call    1 returned 1
------------------
_ZN35CommonMain_FailEvaluateOptions_TestD2Ev:
function _ZN35CommonMain_FailEvaluateOptions_TestD2Ev called 1 returned 100% blocks executed 100%
1:  324:TEST(CommonMain, FailEvaluateOptions)
call    0 returned 1
------------------
_ZN35CommonMain_FailEvaluateOptions_Test8TestBodyEv:
function _ZN35CommonMain_FailEvaluateOptions_Test8TestBodyEv called 1 returned 100% blocks executed 47%
1:  324:TEST(CommonMain, FailEvaluateOptions)
-:  325:{
1:  326:  char szArg00[] = "common_main_fail_opt";
1:  327:  char szArg01[] = "--testArgA";
-:  328:  char * const arszArgs[]
-:  329:  {
-:  330:    szArg00,
-:  331:    szArg01,
1:  332:  };
1:  333:  int const argCount = sizeof(arszArgs) / sizeof(char *);
-:  334:
-:  335:  // Prepare mock functions
1:  336:  MockCommonFunctions functionMock;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
1:  337:  ctparts_commonMainContext stContext = { &functionMock };
-:  338:  ctparts_commonMainFunctions_t stFunctions;
1:  339:  stFunctions.pfPrintInfoText = &PrintInfoText;
1:  340:  stFunctions.pfSetOptionDefaults = &SetOptionDefaults;
1:  341:  stFunctions.pfReleaseSpecificOptions = &ReleaseSpecificOptions;
1:  342:  stFunctions.pfEvaluateEarlyOptions = &EvaluateEarlyOptions;
1:  343:  stFunctions.pfEvaluateOptions = &EvaluateOptions;
1:  344:  stFunctions.pfInitSpecificResources = &InitSpecificResources;
1:  345:  stFunctions.pfReleaseSpecificResources = &ReleaseSpecificResources;
-:  346:
-:  347:  // Set call expectation
2:  348:  EXPECT_CALL(functionMock, SetOptionDefaults(::testing::NotNull()))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
call   16 returned 1
call   17 never executed
call   18 never executed
2:  349:    .Times(AtLeast(1))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 never executed
1:  350:    .WillRepeatedly(WithArgs<0>(Invoke(&functionMock, &MockCommonFunctions::SetOptionDefaultsFollowers)));
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
call    8 returned 1
call    9 returned 1
call   10 never executed
2:  351:  EXPECT_CALL(functionMock, EvaluateEarlyOptions(argCount, arszArgs, ::testing::_))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
call   15 returned 1
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
call   19 returned 1
call   20 returned 1
call   21 returned 1
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
2:  352:    .Times(AtLeast(1))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 never executed
1:  353:    .WillRepeatedly(Return(CTUTIL_SUCCESS));
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 1
call   10 returned 1
call   11 never executed
2:  354:  EXPECT_CALL(functionMock, EvaluateOptions(argCount, arszArgs, ::testing::_))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
call   15 returned 1
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
call   19 returned 1
call   20 returned 1
call   21 returned 1
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
2:  355:    .Times(AtLeast(1))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 never executed
1:  356:    .WillRepeatedly(Return(CTUTIL_FAILED));
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 1
call   10 returned 1
call   11 never executed
2:  357:  EXPECT_CALL(functionMock, PrintInfoText(::testing::_))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 1
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
call   13 returned 1
call   14 never executed
call   15 never executed
1:  358:    .Times(Exactly(0));
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 returned 1
call    8 never executed
2:  359:  EXPECT_CALL(functionMock, InitSpecificResources(::testing::NotNull()))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
call   16 returned 1
call   17 never executed
call   18 never executed
2:  360:    .Times(AnyNumber())
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 never executed
1:  361:    .WillRepeatedly(WithArgs<0>(Invoke(&functionMock, &MockCommonFunctions::InitSpecificResourcesFollowers)));
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
call    8 returned 1
call    9 returned 1
call   10 never executed
-:  362:
1:  363:  exitCode_t const result = ctutil_CommonMain(argCount, arszArgs, &stFunctions, &stContext);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
1*:  364:  ASSERT_NE(CTUTIL_SUCCESS, result);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
call   18 returned 1
branch 19 taken 1 (fallthrough)
branch 20 taken 0
call   21 never executed
call   22 never executed
call   23 never executed
1:  365:}
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
call    3 never executed
------------------
-:  366:
-:  367:
4:  368:TEST(CommonMain, FailInitSpecificResources)
-:  369:{
1:  370:  char szArg00[] = "common_main_fail_res";
1:  371:  char szArg01[] = "--testArgR";
-:  372:  char * const arszArgs[]
-:  373:  {
-:  374:    szArg00,
-:  375:    szArg01,
1:  376:  };
1:  377:  int const argCount = sizeof(arszArgs) / sizeof(char *);
-:  378:
-:  379:  // Prepare mock functions
1:  380:  MockCommonFunctions functionMock;
1:  381:  ctparts_commonMainContext stContext = { &functionMock };
-:  382:  ctparts_commonMainFunctions_t stFunctions;
1:  383:  stFunctions.pfPrintInfoText = &PrintInfoText;
1:  384:  stFunctions.pfSetOptionDefaults = &SetOptionDefaults;
1:  385:  stFunctions.pfReleaseSpecificOptions = &ReleaseSpecificOptions;
1:  386:  stFunctions.pfEvaluateEarlyOptions = &EvaluateEarlyOptions;
1:  387:  stFunctions.pfEvaluateOptions = &EvaluateOptions;
1:  388:  stFunctions.pfInitSpecificResources = &InitSpecificResources;
1:  389:  stFunctions.pfReleaseSpecificResources = &ReleaseSpecificResources;
-:  390:
-:  391:  // Set call expectation
2:  392:  EXPECT_CALL(functionMock, SetOptionDefaults(::testing::NotNull()))
2:  393:    .Times(AtLeast(1))
1:  394:    .WillRepeatedly(WithArgs<0>(Invoke(&functionMock, &MockCommonFunctions::SetOptionDefaultsFollowers)));
2:  395:  EXPECT_CALL(functionMock, EvaluateEarlyOptions(argCount, arszArgs, ::testing::_))
2:  396:    .Times(AtLeast(1))
1:  397:    .WillRepeatedly(Return(CTUTIL_SUCCESS));
2:  398:  EXPECT_CALL(functionMock, EvaluateOptions(argCount, arszArgs, ::testing::_))
2:  399:    .Times(AtLeast(1))
1:  400:    .WillRepeatedly(Return(CTUTIL_SUCCESS));
2:  401:  EXPECT_CALL(functionMock, PrintInfoText(::testing::StrEq(szArg00)))
1:  402:    .Times(AtMost(1));
2:  403:  EXPECT_CALL(functionMock, InitSpecificResources(::testing::NotNull()))
2:  404:    .Times(AtLeast(1))
1:  405:    .WillRepeatedly(Return(CTUTIL_FAILED));
2:  406:  EXPECT_CALL(functionMock, ReleaseSpecificResources(::testing::_))
1:  407:    .Times(Exactly(0));
-:  408:
1:  409:  exitCode_t const result = ctutil_CommonMain(argCount, arszArgs, &stFunctions, &stContext);
1*:  410:  ASSERT_NE(CTUTIL_SUCCESS, result);
1:  411:}
------------------
_ZN41CommonMain_FailInitSpecificResources_TestC2Ev:
function _ZN41CommonMain_FailInitSpecificResources_TestC2Ev called 1 returned 100% blocks executed 100%
1:  368:TEST(CommonMain, FailInitSpecificResources)
call    0 returned 1
------------------
_ZN41CommonMain_FailInitSpecificResources_TestD0Ev:
function _ZN41CommonMain_FailInitSpecificResources_TestD0Ev called 1 returned 100% blocks executed 100%
1:  368:TEST(CommonMain, FailInitSpecificResources)
call    0 returned 1
call    1 returned 1
------------------
_ZN41CommonMain_FailInitSpecificResources_TestD2Ev:
function _ZN41CommonMain_FailInitSpecificResources_TestD2Ev called 1 returned 100% blocks executed 100%
1:  368:TEST(CommonMain, FailInitSpecificResources)
call    0 returned 1
------------------
_ZN41CommonMain_FailInitSpecificResources_Test8TestBodyEv:
function _ZN41CommonMain_FailInitSpecificResources_Test8TestBodyEv called 1 returned 100% blocks executed 48%
1:  368:TEST(CommonMain, FailInitSpecificResources)
-:  369:{
1:  370:  char szArg00[] = "common_main_fail_res";
1:  371:  char szArg01[] = "--testArgR";
-:  372:  char * const arszArgs[]
-:  373:  {
-:  374:    szArg00,
-:  375:    szArg01,
1:  376:  };
1:  377:  int const argCount = sizeof(arszArgs) / sizeof(char *);
-:  378:
-:  379:  // Prepare mock functions
1:  380:  MockCommonFunctions functionMock;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
1:  381:  ctparts_commonMainContext stContext = { &functionMock };
-:  382:  ctparts_commonMainFunctions_t stFunctions;
1:  383:  stFunctions.pfPrintInfoText = &PrintInfoText;
1:  384:  stFunctions.pfSetOptionDefaults = &SetOptionDefaults;
1:  385:  stFunctions.pfReleaseSpecificOptions = &ReleaseSpecificOptions;
1:  386:  stFunctions.pfEvaluateEarlyOptions = &EvaluateEarlyOptions;
1:  387:  stFunctions.pfEvaluateOptions = &EvaluateOptions;
1:  388:  stFunctions.pfInitSpecificResources = &InitSpecificResources;
1:  389:  stFunctions.pfReleaseSpecificResources = &ReleaseSpecificResources;
-:  390:
-:  391:  // Set call expectation
2:  392:  EXPECT_CALL(functionMock, SetOptionDefaults(::testing::NotNull()))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
call   16 returned 1
call   17 never executed
call   18 never executed
2:  393:    .Times(AtLeast(1))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 never executed
1:  394:    .WillRepeatedly(WithArgs<0>(Invoke(&functionMock, &MockCommonFunctions::SetOptionDefaultsFollowers)));
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
call    8 returned 1
call    9 returned 1
call   10 never executed
2:  395:  EXPECT_CALL(functionMock, EvaluateEarlyOptions(argCount, arszArgs, ::testing::_))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
call   15 returned 1
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
call   19 returned 1
call   20 returned 1
call   21 returned 1
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
2:  396:    .Times(AtLeast(1))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 never executed
1:  397:    .WillRepeatedly(Return(CTUTIL_SUCCESS));
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 1
call   10 returned 1
call   11 never executed
2:  398:  EXPECT_CALL(functionMock, EvaluateOptions(argCount, arszArgs, ::testing::_))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
call   15 returned 1
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
call   19 returned 1
call   20 returned 1
call   21 returned 1
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
2:  399:    .Times(AtLeast(1))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 never executed
1:  400:    .WillRepeatedly(Return(CTUTIL_SUCCESS));
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 1
call   10 returned 1
call   11 never executed
2:  401:  EXPECT_CALL(functionMock, PrintInfoText(::testing::StrEq(szArg00)))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
call   16 returned 1
call   17 returned 1
call   18 never executed
call   19 never executed
call   20 never executed
1:  402:    .Times(AtMost(1));
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 returned 1
call    8 never executed
2:  403:  EXPECT_CALL(functionMock, InitSpecificResources(::testing::NotNull()))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
call   16 returned 1
call   17 never executed
call   18 never executed
2:  404:    .Times(AtLeast(1))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 never executed
1:  405:    .WillRepeatedly(Return(CTUTIL_FAILED));
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 1
call   10 returned 1
call   11 never executed
2:  406:  EXPECT_CALL(functionMock, ReleaseSpecificResources(::testing::_))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 1
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
call   13 returned 1
call   14 never executed
call   15 never executed
1:  407:    .Times(Exactly(0));
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 returned 1
call    8 never executed
-:  408:
1:  409:  exitCode_t const result = ctutil_CommonMain(argCount, arszArgs, &stFunctions, &stContext);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
1*:  410:  ASSERT_NE(CTUTIL_SUCCESS, result);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
call   18 returned 1
branch 19 taken 1 (fallthrough)
branch 20 taken 0
call   21 never executed
call   22 never executed
call   23 never executed
1:  411:}
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
call    3 never executed
------------------
-:  412:
-:  413:
-:  414://---- End of source file ------------------------------------------------------
-:  415:
