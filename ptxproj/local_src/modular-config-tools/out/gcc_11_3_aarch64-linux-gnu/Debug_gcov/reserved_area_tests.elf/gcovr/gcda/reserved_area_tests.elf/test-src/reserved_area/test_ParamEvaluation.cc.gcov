-:    0:Source:test-src/reserved_area/test_ParamEvaluation.cc
-:    1://------------------------------------------------------------------------------
-:    2:// This Source Code Form is subject to the terms of the Mozilla Public
-:    3:// License, v. 2.0. If a copy of the MPL was not distributed with this
-:    4:// file, You can obtain one at http://mozilla.org/MPL/2.0/.
-:    5://
-:    6:// This file is part of project modular-config-tools (PTXdist package modular-config-tools).
-:    7://
-:    8:// Copyright (c) 2019-2022 WAGO GmbH & Co. KG
-:    9://------------------------------------------------------------------------------
-:   10://------------------------------------------------------------------------------
-:   11:///  \file     test_ParamEvaluation.cc
-:   12:///
-:   13:///  \brief    Tests for parameter evaluation of config tool reserved_area.
-:   14:///
-:   15:///  \author   PEn: WAGO GmbH & Co. KG
-:   16://------------------------------------------------------------------------------
-:   17:
-:   18://------------------------------------------------------------------------------
-:   19:// include files
-:   20://------------------------------------------------------------------------------
-:   21:#include "ctparts/common_main_defaults.h"
-:   22:#include "params.h"
-:   23:#include "testutil/common_parameter_checks.h"
-:   24:#include <gtest/gtest.h>
-:   25:#include <string.h>
-:   26:
-:   27://------------------------------------------------------------------------------
-:   28:// macros
-:   29://------------------------------------------------------------------------------
-:   30:
-:   31://------------------------------------------------------------------------------
-:   32:// defines; structure, enumeration and type definitions
-:   33://------------------------------------------------------------------------------
-:   34:class OptionEvaluationTest_reserved_area : public ::testing::Test
-:   35:{
-:   36:  protected:
-:   37:    ctutil_Options_t stOptions;
-:   38:
-:   39:  protected:
function _ZN34OptionEvaluationTest_reserved_areaC2Ev called 7 returned 100% blocks executed 100%
7:   40:    OptionEvaluationTest_reserved_area() {};
call    0 returned 7
7*:   41:    virtual ~OptionEvaluationTest_reserved_area() {};
------------------
_ZN34OptionEvaluationTest_reserved_areaD0Ev:
function _ZN34OptionEvaluationTest_reserved_areaD0Ev called 0 returned 0% blocks executed 0%
#####:   41:    virtual ~OptionEvaluationTest_reserved_area() {};
call    0 never executed
call    1 never executed
------------------
_ZN34OptionEvaluationTest_reserved_areaD2Ev:
function _ZN34OptionEvaluationTest_reserved_areaD2Ev called 7 returned 100% blocks executed 100%
7:   41:    virtual ~OptionEvaluationTest_reserved_area() {};
call    0 returned 7
------------------
function _ZN34OptionEvaluationTest_reserved_area5SetUpEv called 7 returned 100% blocks executed 37%
7:   42:    virtual void SetUp()
-:   43:    {
7:   44:      memset(&stOptions, 0, sizeof(stOptions));
7:   45:      statusCode_t status = CTUTIL_SUCCESS;
7:   46:      status = ctparts_SetOptionDefaults(NULL, &(this->stOptions));
call    0 returned 7
branch  1 taken 7 (fallthrough)
branch  2 taken 0 (throw)
7*:   47:      ASSERT_EQ(CTUTIL_SUCCESS, status);
call    0 returned 7
branch  1 taken 7 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 7
branch  4 taken 0 (fallthrough)
branch  5 taken 7
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
call   18 returned 7
branch 19 taken 7 (fallthrough)
branch 20 taken 0
call   21 never executed
call   22 never executed
call   23 never executed
-:   48:    }
function _ZN34OptionEvaluationTest_reserved_area8TearDownEv called 7 returned 100% blocks executed 100%
7:   49:    virtual void TearDown()
-:   50:    {
7:   51:      ctparts_ReleaseSpecificOptions(NULL, &(this->stOptions));
call    0 returned 7
7:   52:    }
-:   53:};
-:   54:
-:   55://------------------------------------------------------------------------------
-:   56:// variables' and constants' definitions
-:   57://------------------------------------------------------------------------------
-:   58:
-:   59://------------------------------------------------------------------------------
-:   60:// test implementation
-:   61://------------------------------------------------------------------------------
4:   62:TEST(OptionEvaluationBasicTest_reserved_area, SetOptionDefaultsAndRelease)
-:   63:{
-:   64:  ctutil_Options_t stOptions;
1:   65:  memset(&stOptions, 0, sizeof(stOptions));
1:   66:  stOptions.stCommonOptions.infoPrint = false;
1:   67:  stOptions.stCommonOptions.quiet = false;
1:   68:  stOptions.stCommonOptions.extractFromUri = false;
1:   69:  statusCode_t status = CTUTIL_SUCCESS;
1:   70:  status = ctparts_SetOptionDefaults(NULL, &stOptions);
1*:   71:  ASSERT_EQ(CTUTIL_SUCCESS, status);
1*:   72:  EXPECT_TRUE(stOptions.stCommonOptions.infoPrint); // Default for config tools (print if no other parameter given)
1*:   73:  EXPECT_FALSE(stOptions.stCommonOptions.quiet); // Default for new config tools
1*:   74:  EXPECT_FALSE(stOptions.stCommonOptions.extractFromUri); // Default for new config tools
1*:   75:  EXPECT_NE((void *)NULL, stOptions.pstSpecificOptions); // Needed because specific options possible
1:   76:  ctparts_ReleaseSpecificOptions(NULL, &stOptions);
1*:   77:  EXPECT_EQ((void *)NULL, stOptions.pstSpecificOptions); // Pointer have to be reseted to NULL
-:   78:}
------------------
_ZN72OptionEvaluationBasicTest_reserved_area_SetOptionDefaultsAndRelease_TestC2Ev:
function _ZN72OptionEvaluationBasicTest_reserved_area_SetOptionDefaultsAndRelease_TestC2Ev called 1 returned 100% blocks executed 100%
1:   62:TEST(OptionEvaluationBasicTest_reserved_area, SetOptionDefaultsAndRelease)
call    0 returned 1
------------------
_ZN72OptionEvaluationBasicTest_reserved_area_SetOptionDefaultsAndRelease_TestD0Ev:
function _ZN72OptionEvaluationBasicTest_reserved_area_SetOptionDefaultsAndRelease_TestD0Ev called 1 returned 100% blocks executed 100%
1:   62:TEST(OptionEvaluationBasicTest_reserved_area, SetOptionDefaultsAndRelease)
call    0 returned 1
call    1 returned 1
------------------
_ZN72OptionEvaluationBasicTest_reserved_area_SetOptionDefaultsAndRelease_TestD2Ev:
function _ZN72OptionEvaluationBasicTest_reserved_area_SetOptionDefaultsAndRelease_TestD2Ev called 1 returned 100% blocks executed 100%
1:   62:TEST(OptionEvaluationBasicTest_reserved_area, SetOptionDefaultsAndRelease)
call    0 returned 1
------------------
_ZN72OptionEvaluationBasicTest_reserved_area_SetOptionDefaultsAndRelease_Test8TestBodyEv:
function _ZN72OptionEvaluationBasicTest_reserved_area_SetOptionDefaultsAndRelease_Test8TestBodyEv called 1 returned 100% blocks executed 21%
1:   62:TEST(OptionEvaluationBasicTest_reserved_area, SetOptionDefaultsAndRelease)
-:   63:{
-:   64:  ctutil_Options_t stOptions;
1:   65:  memset(&stOptions, 0, sizeof(stOptions));
1:   66:  stOptions.stCommonOptions.infoPrint = false;
1:   67:  stOptions.stCommonOptions.quiet = false;
1:   68:  stOptions.stCommonOptions.extractFromUri = false;
1:   69:  statusCode_t status = CTUTIL_SUCCESS;
1:   70:  status = ctparts_SetOptionDefaults(NULL, &stOptions);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
1*:   71:  ASSERT_EQ(CTUTIL_SUCCESS, status);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
call   18 returned 1
branch 19 taken 1 (fallthrough)
branch 20 taken 0
call   21 never executed
call   22 never executed
call   23 never executed
1*:   72:  EXPECT_TRUE(stOptions.stCommonOptions.infoPrint); // Default for config tools (print if no other parameter given)
call    0 returned 1
call    1 returned 1
branch  2 taken 0
branch  3 taken 1
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
call    8 never executed
branch  9 never executed
branch 10 never executed
call   11 never executed
branch 12 never executed
branch 13 never executed
call   14 never executed
branch 15 never executed
branch 16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 returned 1
call   21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
1*:   73:  EXPECT_FALSE(stOptions.stCommonOptions.quiet); // Default for new config tools
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
call    8 never executed
branch  9 never executed
branch 10 never executed
call   11 never executed
branch 12 never executed
branch 13 never executed
call   14 never executed
branch 15 never executed
branch 16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 returned 1
call   21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
1*:   74:  EXPECT_FALSE(stOptions.stCommonOptions.extractFromUri); // Default for new config tools
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
call    8 never executed
branch  9 never executed
branch 10 never executed
call   11 never executed
branch 12 never executed
branch 13 never executed
call   14 never executed
branch 15 never executed
branch 16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 returned 1
call   21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
1*:   75:  EXPECT_NE((void *)NULL, stOptions.pstSpecificOptions); // Needed because specific options possible
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
call   18 returned 1
call   19 never executed
call   20 never executed
call   21 never executed
1:   76:  ctparts_ReleaseSpecificOptions(NULL, &stOptions);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
1*:   77:  EXPECT_EQ((void *)NULL, stOptions.pstSpecificOptions); // Pointer have to be reseted to NULL
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
call   18 returned 1
call   19 never executed
call   20 never executed
call   21 never executed
-:   78:}
------------------
-:   79:
-:   80:
4:   81:TEST_F(OptionEvaluationTest_reserved_area, CheckSetup)
-:   82:{
-:   83:  // Nothing else to do here, everything is done in SetUp/TearDown
1:   84:}
------------------
_ZN50OptionEvaluationTest_reserved_area_CheckSetup_TestC2Ev:
function _ZN50OptionEvaluationTest_reserved_area_CheckSetup_TestC2Ev called 1 returned 100% blocks executed 100%
1:   81:TEST_F(OptionEvaluationTest_reserved_area, CheckSetup)
call    0 returned 1
------------------
_ZN50OptionEvaluationTest_reserved_area_CheckSetup_TestD0Ev:
function _ZN50OptionEvaluationTest_reserved_area_CheckSetup_TestD0Ev called 1 returned 100% blocks executed 100%
1:   81:TEST_F(OptionEvaluationTest_reserved_area, CheckSetup)
call    0 returned 1
call    1 returned 1
------------------
_ZN50OptionEvaluationTest_reserved_area_CheckSetup_TestD2Ev:
function _ZN50OptionEvaluationTest_reserved_area_CheckSetup_TestD2Ev called 1 returned 100% blocks executed 100%
1:   81:TEST_F(OptionEvaluationTest_reserved_area, CheckSetup)
call    0 returned 1
------------------
_ZN50OptionEvaluationTest_reserved_area_CheckSetup_Test8TestBodyEv:
function _ZN50OptionEvaluationTest_reserved_area_CheckSetup_Test8TestBodyEv called 1 returned 100% blocks executed 100%
1:   81:TEST_F(OptionEvaluationTest_reserved_area, CheckSetup)
-:   82:{
-:   83:  // Nothing else to do here, everything is done in SetUp/TearDown
1:   84:}
------------------
-:   85:
-:   86:
4:   87:TEST_F(OptionEvaluationTest_reserved_area, EvaluateEarlyOptions)
-:   88:{
1:   89:  char szArg00[] = "test";
1:   90:  char szArg01[] = "otherOptionsShouldBeIgnored";
1:   91:  char szArg02[] = "encoded%28Options%29MustNotBeDecodedByDefault";
-:   92:  char * const arszArgs[]
-:   93:  {
-:   94:    szArg00,
-:   95:    szArg01,
-:   96:    szArg02,
1:   97:  };
1:   98:  int const argCount = sizeof(arszArgs) / sizeof(char *);
-:   99:
-:  100:  // Don't use szArg01, Arguments decoded in place!
1:  101:  char const * const szArg01Copy = "otherOptionsShouldBeIgnored";
-:  102:  // Don't use szArg02, Arguments decoded in place!
1:  103:  char const * const szArg02Copy = "encoded%28Options%29MustNotBeDecodedByDefault";
1:  104:  testutil::TestCommonEarlyOptionsDefault(argCount, arszArgs, szArg01Copy, szArg02Copy, &(this->stOptions));
1:  105:}
------------------
_ZN60OptionEvaluationTest_reserved_area_EvaluateEarlyOptions_TestC2Ev:
function _ZN60OptionEvaluationTest_reserved_area_EvaluateEarlyOptions_TestC2Ev called 1 returned 100% blocks executed 100%
1:   87:TEST_F(OptionEvaluationTest_reserved_area, EvaluateEarlyOptions)
call    0 returned 1
------------------
_ZN60OptionEvaluationTest_reserved_area_EvaluateEarlyOptions_TestD0Ev:
function _ZN60OptionEvaluationTest_reserved_area_EvaluateEarlyOptions_TestD0Ev called 1 returned 100% blocks executed 100%
1:   87:TEST_F(OptionEvaluationTest_reserved_area, EvaluateEarlyOptions)
call    0 returned 1
call    1 returned 1
------------------
_ZN60OptionEvaluationTest_reserved_area_EvaluateEarlyOptions_TestD2Ev:
function _ZN60OptionEvaluationTest_reserved_area_EvaluateEarlyOptions_TestD2Ev called 1 returned 100% blocks executed 100%
1:   87:TEST_F(OptionEvaluationTest_reserved_area, EvaluateEarlyOptions)
call    0 returned 1
------------------
_ZN60OptionEvaluationTest_reserved_area_EvaluateEarlyOptions_Test8TestBodyEv:
function _ZN60OptionEvaluationTest_reserved_area_EvaluateEarlyOptions_Test8TestBodyEv called 1 returned 100% blocks executed 100%
1:   87:TEST_F(OptionEvaluationTest_reserved_area, EvaluateEarlyOptions)
-:   88:{
1:   89:  char szArg00[] = "test";
1:   90:  char szArg01[] = "otherOptionsShouldBeIgnored";
1:   91:  char szArg02[] = "encoded%28Options%29MustNotBeDecodedByDefault";
-:   92:  char * const arszArgs[]
-:   93:  {
-:   94:    szArg00,
-:   95:    szArg01,
-:   96:    szArg02,
1:   97:  };
1:   98:  int const argCount = sizeof(arszArgs) / sizeof(char *);
-:   99:
-:  100:  // Don't use szArg01, Arguments decoded in place!
1:  101:  char const * const szArg01Copy = "otherOptionsShouldBeIgnored";
-:  102:  // Don't use szArg02, Arguments decoded in place!
1:  103:  char const * const szArg02Copy = "encoded%28Options%29MustNotBeDecodedByDefault";
1:  104:  testutil::TestCommonEarlyOptionsDefault(argCount, arszArgs, szArg01Copy, szArg02Copy, &(this->stOptions));
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
1:  105:}
------------------
-:  106:
-:  107:
4:  108:TEST_F(OptionEvaluationTest_reserved_area, EvaluateOptionsEmpty)
-:  109:{
1:  110:  char szArg00[] = "test";
-:  111:  char * const arszArgs[]
-:  112:  {
-:  113:    szArg00,
1:  114:  };
1:  115:  int const argCount = sizeof(arszArgs) / sizeof(char *);
-:  116:
1:  117:  testutil::TestCommonOptionsEmpty(argCount, arszArgs, &(this->stOptions));
1:  118:}
------------------
_ZN60OptionEvaluationTest_reserved_area_EvaluateOptionsEmpty_TestC2Ev:
function _ZN60OptionEvaluationTest_reserved_area_EvaluateOptionsEmpty_TestC2Ev called 1 returned 100% blocks executed 100%
1:  108:TEST_F(OptionEvaluationTest_reserved_area, EvaluateOptionsEmpty)
call    0 returned 1
------------------
_ZN60OptionEvaluationTest_reserved_area_EvaluateOptionsEmpty_TestD0Ev:
function _ZN60OptionEvaluationTest_reserved_area_EvaluateOptionsEmpty_TestD0Ev called 1 returned 100% blocks executed 100%
1:  108:TEST_F(OptionEvaluationTest_reserved_area, EvaluateOptionsEmpty)
call    0 returned 1
call    1 returned 1
------------------
_ZN60OptionEvaluationTest_reserved_area_EvaluateOptionsEmpty_TestD2Ev:
function _ZN60OptionEvaluationTest_reserved_area_EvaluateOptionsEmpty_TestD2Ev called 1 returned 100% blocks executed 100%
1:  108:TEST_F(OptionEvaluationTest_reserved_area, EvaluateOptionsEmpty)
call    0 returned 1
------------------
_ZN60OptionEvaluationTest_reserved_area_EvaluateOptionsEmpty_Test8TestBodyEv:
function _ZN60OptionEvaluationTest_reserved_area_EvaluateOptionsEmpty_Test8TestBodyEv called 1 returned 100% blocks executed 100%
1:  108:TEST_F(OptionEvaluationTest_reserved_area, EvaluateOptionsEmpty)
-:  109:{
1:  110:  char szArg00[] = "test";
-:  111:  char * const arszArgs[]
-:  112:  {
-:  113:    szArg00,
1:  114:  };
1:  115:  int const argCount = sizeof(arszArgs) / sizeof(char *);
-:  116:
1:  117:  testutil::TestCommonOptionsEmpty(argCount, arszArgs, &(this->stOptions));
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
1:  118:}
------------------
-:  119:
-:  120:
4:  121:TEST_F(OptionEvaluationTest_reserved_area, EvaluateOptionsQuiet)
-:  122:{
1:  123:  char szArg00[] = "test";
1:  124:  char szArg01[] = "--quiet";
-:  125:  char * const arszArgs[]
-:  126:  {
-:  127:    szArg00,
-:  128:    szArg01,
1:  129:  };
1:  130:  int const argCount = sizeof(arszArgs) / sizeof(char *);
-:  131:
1:  132:  testutil::TestCommonOptionsQuiet(argCount, arszArgs, &(this->stOptions));
1:  133:}
------------------
_ZN60OptionEvaluationTest_reserved_area_EvaluateOptionsQuiet_TestC2Ev:
function _ZN60OptionEvaluationTest_reserved_area_EvaluateOptionsQuiet_TestC2Ev called 1 returned 100% blocks executed 100%
1:  121:TEST_F(OptionEvaluationTest_reserved_area, EvaluateOptionsQuiet)
call    0 returned 1
------------------
_ZN60OptionEvaluationTest_reserved_area_EvaluateOptionsQuiet_TestD0Ev:
function _ZN60OptionEvaluationTest_reserved_area_EvaluateOptionsQuiet_TestD0Ev called 1 returned 100% blocks executed 100%
1:  121:TEST_F(OptionEvaluationTest_reserved_area, EvaluateOptionsQuiet)
call    0 returned 1
call    1 returned 1
------------------
_ZN60OptionEvaluationTest_reserved_area_EvaluateOptionsQuiet_TestD2Ev:
function _ZN60OptionEvaluationTest_reserved_area_EvaluateOptionsQuiet_TestD2Ev called 1 returned 100% blocks executed 100%
1:  121:TEST_F(OptionEvaluationTest_reserved_area, EvaluateOptionsQuiet)
call    0 returned 1
------------------
_ZN60OptionEvaluationTest_reserved_area_EvaluateOptionsQuiet_Test8TestBodyEv:
function _ZN60OptionEvaluationTest_reserved_area_EvaluateOptionsQuiet_Test8TestBodyEv called 1 returned 100% blocks executed 100%
1:  121:TEST_F(OptionEvaluationTest_reserved_area, EvaluateOptionsQuiet)
-:  122:{
1:  123:  char szArg00[] = "test";
1:  124:  char szArg01[] = "--quiet";
-:  125:  char * const arszArgs[]
-:  126:  {
-:  127:    szArg00,
-:  128:    szArg01,
1:  129:  };
1:  130:  int const argCount = sizeof(arszArgs) / sizeof(char *);
-:  131:
1:  132:  testutil::TestCommonOptionsQuiet(argCount, arszArgs, &(this->stOptions));
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
1:  133:}
------------------
-:  134:
-:  135:
4:  136:TEST_F(OptionEvaluationTest_reserved_area, EvaluateOptionsQuietShort)
-:  137:{
1:  138:  char szArg00[] = "test";
1:  139:  char szArg01[] = "-q";
-:  140:  char * const arszArgs[]
-:  141:  {
-:  142:    szArg00,
-:  143:    szArg01,
1:  144:  };
1:  145:  int const argCount = sizeof(arszArgs) / sizeof(char *);
-:  146:
1:  147:  testutil::TestCommonOptionsQuiet(argCount, arszArgs, &(this->stOptions));
1:  148:}
------------------
_ZN65OptionEvaluationTest_reserved_area_EvaluateOptionsQuietShort_TestC2Ev:
function _ZN65OptionEvaluationTest_reserved_area_EvaluateOptionsQuietShort_TestC2Ev called 1 returned 100% blocks executed 100%
1:  136:TEST_F(OptionEvaluationTest_reserved_area, EvaluateOptionsQuietShort)
call    0 returned 1
------------------
_ZN65OptionEvaluationTest_reserved_area_EvaluateOptionsQuietShort_TestD0Ev:
function _ZN65OptionEvaluationTest_reserved_area_EvaluateOptionsQuietShort_TestD0Ev called 1 returned 100% blocks executed 100%
1:  136:TEST_F(OptionEvaluationTest_reserved_area, EvaluateOptionsQuietShort)
call    0 returned 1
call    1 returned 1
------------------
_ZN65OptionEvaluationTest_reserved_area_EvaluateOptionsQuietShort_TestD2Ev:
function _ZN65OptionEvaluationTest_reserved_area_EvaluateOptionsQuietShort_TestD2Ev called 1 returned 100% blocks executed 100%
1:  136:TEST_F(OptionEvaluationTest_reserved_area, EvaluateOptionsQuietShort)
call    0 returned 1
------------------
_ZN65OptionEvaluationTest_reserved_area_EvaluateOptionsQuietShort_Test8TestBodyEv:
function _ZN65OptionEvaluationTest_reserved_area_EvaluateOptionsQuietShort_Test8TestBodyEv called 1 returned 100% blocks executed 100%
1:  136:TEST_F(OptionEvaluationTest_reserved_area, EvaluateOptionsQuietShort)
-:  137:{
1:  138:  char szArg00[] = "test";
1:  139:  char szArg01[] = "-q";
-:  140:  char * const arszArgs[]
-:  141:  {
-:  142:    szArg00,
-:  143:    szArg01,
1:  144:  };
1:  145:  int const argCount = sizeof(arszArgs) / sizeof(char *);
-:  146:
1:  147:  testutil::TestCommonOptionsQuiet(argCount, arszArgs, &(this->stOptions));
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
1:  148:}
------------------
-:  149:
-:  150:
4:  151:TEST_F(OptionEvaluationTest_reserved_area, EvaluateOptionsHelp)
-:  152:{
1:  153:  char szArg00[] = "test";
1:  154:  char szArg01[] = "--help";
-:  155:  char * const arszArgs[]
-:  156:  {
-:  157:    szArg00,
-:  158:    szArg01,
1:  159:  };
1:  160:  int const argCount = sizeof(arszArgs) / sizeof(char *);
-:  161:
1:  162:  testutil::TestCommonOptionsHelp(argCount, arszArgs, &(this->stOptions));
1:  163:}
------------------
_ZN59OptionEvaluationTest_reserved_area_EvaluateOptionsHelp_TestC2Ev:
function _ZN59OptionEvaluationTest_reserved_area_EvaluateOptionsHelp_TestC2Ev called 1 returned 100% blocks executed 100%
1:  151:TEST_F(OptionEvaluationTest_reserved_area, EvaluateOptionsHelp)
call    0 returned 1
------------------
_ZN59OptionEvaluationTest_reserved_area_EvaluateOptionsHelp_TestD0Ev:
function _ZN59OptionEvaluationTest_reserved_area_EvaluateOptionsHelp_TestD0Ev called 1 returned 100% blocks executed 100%
1:  151:TEST_F(OptionEvaluationTest_reserved_area, EvaluateOptionsHelp)
call    0 returned 1
call    1 returned 1
------------------
_ZN59OptionEvaluationTest_reserved_area_EvaluateOptionsHelp_TestD2Ev:
function _ZN59OptionEvaluationTest_reserved_area_EvaluateOptionsHelp_TestD2Ev called 1 returned 100% blocks executed 100%
1:  151:TEST_F(OptionEvaluationTest_reserved_area, EvaluateOptionsHelp)
call    0 returned 1
------------------
_ZN59OptionEvaluationTest_reserved_area_EvaluateOptionsHelp_Test8TestBodyEv:
function _ZN59OptionEvaluationTest_reserved_area_EvaluateOptionsHelp_Test8TestBodyEv called 1 returned 100% blocks executed 100%
1:  151:TEST_F(OptionEvaluationTest_reserved_area, EvaluateOptionsHelp)
-:  152:{
1:  153:  char szArg00[] = "test";
1:  154:  char szArg01[] = "--help";
-:  155:  char * const arszArgs[]
-:  156:  {
-:  157:    szArg00,
-:  158:    szArg01,
1:  159:  };
1:  160:  int const argCount = sizeof(arszArgs) / sizeof(char *);
-:  161:
1:  162:  testutil::TestCommonOptionsHelp(argCount, arszArgs, &(this->stOptions));
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
1:  163:}
------------------
-:  164:
-:  165:
4:  166:TEST_F(OptionEvaluationTest_reserved_area, EvaluateOptionsHelpShort)
-:  167:{
1:  168:  char szArg00[] = "test";
1:  169:  char szArg01[] = "-h";
-:  170:  char * const arszArgs[]
-:  171:  {
-:  172:    szArg00,
-:  173:    szArg01,
1:  174:  };
1:  175:  int const argCount = sizeof(arszArgs) / sizeof(char *);
-:  176:
1:  177:  testutil::TestCommonOptionsHelp(argCount, arszArgs, &(this->stOptions));
1:  178:}
------------------
_ZN64OptionEvaluationTest_reserved_area_EvaluateOptionsHelpShort_TestC2Ev:
function _ZN64OptionEvaluationTest_reserved_area_EvaluateOptionsHelpShort_TestC2Ev called 1 returned 100% blocks executed 100%
1:  166:TEST_F(OptionEvaluationTest_reserved_area, EvaluateOptionsHelpShort)
call    0 returned 1
------------------
_ZN64OptionEvaluationTest_reserved_area_EvaluateOptionsHelpShort_TestD0Ev:
function _ZN64OptionEvaluationTest_reserved_area_EvaluateOptionsHelpShort_TestD0Ev called 1 returned 100% blocks executed 100%
1:  166:TEST_F(OptionEvaluationTest_reserved_area, EvaluateOptionsHelpShort)
call    0 returned 1
call    1 returned 1
------------------
_ZN64OptionEvaluationTest_reserved_area_EvaluateOptionsHelpShort_TestD2Ev:
function _ZN64OptionEvaluationTest_reserved_area_EvaluateOptionsHelpShort_TestD2Ev called 1 returned 100% blocks executed 100%
1:  166:TEST_F(OptionEvaluationTest_reserved_area, EvaluateOptionsHelpShort)
call    0 returned 1
------------------
_ZN64OptionEvaluationTest_reserved_area_EvaluateOptionsHelpShort_Test8TestBodyEv:
function _ZN64OptionEvaluationTest_reserved_area_EvaluateOptionsHelpShort_Test8TestBodyEv called 1 returned 100% blocks executed 100%
1:  166:TEST_F(OptionEvaluationTest_reserved_area, EvaluateOptionsHelpShort)
-:  167:{
1:  168:  char szArg00[] = "test";
1:  169:  char szArg01[] = "-h";
-:  170:  char * const arszArgs[]
-:  171:  {
-:  172:    szArg00,
-:  173:    szArg01,
1:  174:  };
1:  175:  int const argCount = sizeof(arszArgs) / sizeof(char *);
-:  176:
1:  177:  testutil::TestCommonOptionsHelp(argCount, arszArgs, &(this->stOptions));
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
1:  178:}
------------------
-:  179:
-:  180:
-:  181://---- End of source file ------------------------------------------------------
-:  182:
