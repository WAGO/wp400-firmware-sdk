#!/bin/bash
#-----------------------------------------------------------------------------#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# Copyright (c) 2015-2024 WAGO GmbH & Co. KG
#-----------------------------------------------------------------------------#
#-----------------------------------------------------------------------------#
# Script:   /etc/init.d/link_devices
#
# Brief:    Init script to link selected devices to well known names.
#           Some link targets read from sys-fs.
#           A collection of needed links is defined in
#           /etc/specific/.devs_to_link.
#
# Author:   OK:   WAGO GmbH & Co. KG
# Author:   AGa:  WAGO GmbH & Co. KG
# Author:   HFS:  WAGO GmbH & Co. KG
# Author:   PEn:  WAGO GmbH & Co. KG
# Author:   LHe:  WAGO GmbH & Co. KG
#-----------------------------------------------------------------------------#

DEVS_TO_LINK="/etc/specific/.devs_to_link"
DEV_SEARCH_PATH="/sys/devices/"

CDS3_SPECIFIC_SERIAL_DEV_NAME="/dev/ttyRUNTIME0"

check_unnamed()
{
    local extract_result=$1
    local name="$2"
    local device="$3"

    if [[ $extract_result -ne 0 || -z "$name" ]]; then
        echo "unnamed_$device"
    else
        echo "$name"
    fi

    return 0
}

extract_emmc_label()
{
    local partition_device="$1"

    local name=""
    name="$(blkid "/dev/$partition_device" | sed -n 's/.*LABEL=\"\(\S\+\)\".*/\1/p')"
    check_unnamed $? "$name" "$partition_device"

    return 0
}


# static partitions for systems with internal flash emmc
PARTITION_EMMC_BOOT_DEV_NAME="mmcblk1p1"
PARTITION_EMMC_BOOT_LINK_NAME="/dev/partition_$(extract_emmc_label "$PARTITION_EMMC_BOOT_DEV_NAME")"
PARTITION_EMMC_ROOTFS1_DEV_NAME="mmcblk1p5"
PARTITION_EMMC_ROOTFS1_LINK_NAME="/dev/partition_$(extract_emmc_label "$PARTITION_EMMC_ROOTFS1_DEV_NAME")"
PARTITION_EMMC_ROOTFS2_DEV_NAME="mmcblk1p7"
PARTITION_EMMC_ROOTFS2_LINK_NAME="/dev/partition_$(extract_emmc_label "$PARTITION_EMMC_ROOTFS2_DEV_NAME")"
PARTITION_EMMC_HOME1_DEV_NAME="mmcblk1p6"
PARTITION_EMMC_HOME1_LINK_NAME="/dev/partition_$(extract_emmc_label "$PARTITION_EMMC_HOME1_DEV_NAME")"

# get configured kbus uart from sys-fs
if [[ -e /dev/kbus0 ]]; then
    KBUS_TTY_PFCXXX_DEV_NAME="$(cat /sys/class/wago/system/kbus_tty_device_name)"
    KBUS_TTY_PFCXXX_LINK_NAME="/dev/ttyKbus"
fi

# get configured uart
SERIAL_DEV_NAME=not_available
if [[ -e "/sys/class/wago/system/tty_rs232_485" ]]; then
    SERIAL_DEV_NAME="$(cat /sys/class/wago/system/tty_rs232_485)"
fi
SERIAL_DEV_LINK_NAME="/dev/serial"

if [[ ! -f "${DEVS_TO_LINK}" ]]; then
    echo "${DEVS_TO_LINK} not found"
    exit 1
fi

# create list of device-paths
index=0
device_paths=()

while read -r line; do
    tmp_dev=$(find ${DEV_SEARCH_PATH} -iname "${line}")
    if [[ -n "${tmp_dev}" ]]; then
        device_paths[index]=${tmp_dev}
        index=$((index + 1))
    else
        echo "${line} not found in ${DEV_SEARCH_PATH}"
    fi
done <${DEVS_TO_LINK}

if [[ ${#device_paths[@]} -eq 0 ]]; then
    echo "no device-paths found"
    exit 1
fi

case $1 in

    start)
        # if device kbus0 exist the kernel supports KBus so from the userspace we can check if kbus0 exists
        if [[ -e /dev/kbus0 ]]; then
            if [[ -c "/dev/${KBUS_TTY_PFCXXX_DEV_NAME}" ]]; then
                ln -sf "/dev/${KBUS_TTY_PFCXXX_DEV_NAME}" "${KBUS_TTY_PFCXXX_LINK_NAME}"
            else
                echo "ERROR: could not set ${KBUS_TTY_PFCXXX_LINK_NAME}, kbus will not be active"
            fi
        fi

        if [[ -c "/dev/${SERIAL_DEV_NAME}" ]]; then
            ln -sf "/dev/${SERIAL_DEV_NAME}" "${SERIAL_DEV_LINK_NAME}"
            ln -sf "${SERIAL_DEV_LINK_NAME}" "${CDS3_SPECIFIC_SERIAL_DEV_NAME}"
        fi

        echo "hardware-available=false" >"/etc/specific/features/serial-service-interface"

        for path in "${device_paths[@]}"; do
            ln -sf "$path" /dev/
        done

        # ----- internal flash partitions -----
        ln -sf /dev/${PARTITION_EMMC_BOOT_DEV_NAME}       "${PARTITION_EMMC_BOOT_LINK_NAME}"
        ln -sf /dev/${PARTITION_EMMC_ROOTFS1_DEV_NAME}    "${PARTITION_EMMC_ROOTFS1_LINK_NAME}"
        ln -sf /dev/${PARTITION_EMMC_ROOTFS2_DEV_NAME}    "${PARTITION_EMMC_ROOTFS2_LINK_NAME}"
        ln -sf /dev/${PARTITION_EMMC_HOME1_DEV_NAME}      "${PARTITION_EMMC_HOME1_LINK_NAME}"
    ;;

    stop)
    ;;

esac